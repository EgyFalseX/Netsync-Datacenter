//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataCenter.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=.;Initial Catalog=DataCenter;Persist Security Info=True;User ID=sa;Pa" +
            "ssword=123456")]
        public string DataCenterConnectionString {
            get {
                return ((string)(this["DataCenterConnectionString"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("USE [master]\r\nGO\r\n/****** Object:  Database [DataCenter]    Script Date: 10/18/20" +
            "13 7:09:46 AM ******/\r\nCREATE DATABASE [DataCenter]\r\n CONTAINMENT = NONE\r\n ON  P" +
            "RIMARY \r\n( NAME = N\'DataCenter\', FILENAME = N\'FalseX2013\\DataCenter.mdf\' , SIZE " +
            "= 6096KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )\r\n LOG ON \r\n( NAME = N\'Data" +
            "Center_log\', FILENAME = N\'FalseX2013\\DataCenter_log.ldf\' , SIZE = 8384KB , MAXSI" +
            "ZE = 2048GB , FILEGROWTH = 10%)\r\nGO\r\nALTER DATABASE [DataCenter] SET COMPATIBILI" +
            "TY_LEVEL = 110\r\nGO\r\nIF (1 = FULLTEXTSERVICEPROPERTY(\'IsFullTextInstalled\'))\r\nbeg" +
            "in\r\nEXEC [DataCenter].[dbo].[sp_fulltext_database] @action = \'enable\'\r\nend\r\nGO\r\n" +
            "ALTER DATABASE [DataCenter] SET ANSI_NULL_DEFAULT OFF \r\nGO\r\nALTER DATABASE [Data" +
            "Center] SET ANSI_NULLS OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET ANSI_PADDING OF" +
            "F \r\nGO\r\nALTER DATABASE [DataCenter] SET ANSI_WARNINGS OFF \r\nGO\r\nALTER DATABASE [" +
            "DataCenter] SET ARITHABORT OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET AUTO_CLOSE " +
            "OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET AUTO_CREATE_STATISTICS ON \r\nGO\r\nALTER " +
            "DATABASE [DataCenter] SET AUTO_SHRINK OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET " +
            "AUTO_UPDATE_STATISTICS ON \r\nGO\r\nALTER DATABASE [DataCenter] SET CURSOR_CLOSE_ON_" +
            "COMMIT OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET CURSOR_DEFAULT  GLOBAL \r\nGO\r\nAL" +
            "TER DATABASE [DataCenter] SET CONCAT_NULL_YIELDS_NULL OFF \r\nGO\r\nALTER DATABASE [" +
            "DataCenter] SET NUMERIC_ROUNDABORT OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET QUO" +
            "TED_IDENTIFIER OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET RECURSIVE_TRIGGERS OFF " +
            "\r\nGO\r\nALTER DATABASE [DataCenter] SET  DISABLE_BROKER \r\nGO\r\nALTER DATABASE [Data" +
            "Center] SET AUTO_UPDATE_STATISTICS_ASYNC OFF \r\nGO\r\nALTER DATABASE [DataCenter] S" +
            "ET DATE_CORRELATION_OPTIMIZATION OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET TRUST" +
            "WORTHY OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET ALLOW_SNAPSHOT_ISOLATION OFF \r\n" +
            "GO\r\nALTER DATABASE [DataCenter] SET PARAMETERIZATION SIMPLE \r\nGO\r\nALTER DATABASE" +
            " [DataCenter] SET READ_COMMITTED_SNAPSHOT OFF \r\nGO\r\nALTER DATABASE [DataCenter] " +
            "SET HONOR_BROKER_PRIORITY OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET RECOVERY FUL" +
            "L \r\nGO\r\nALTER DATABASE [DataCenter] SET  MULTI_USER \r\nGO\r\nALTER DATABASE [DataCe" +
            "nter] SET PAGE_VERIFY CHECKSUM  \r\nGO\r\nALTER DATABASE [DataCenter] SET DB_CHAININ" +
            "G OFF \r\nGO\r\nALTER DATABASE [DataCenter] SET FILESTREAM( NON_TRANSACTED_ACCESS = " +
            "OFF ) \r\nGO\r\nALTER DATABASE [DataCenter] SET TARGET_RECOVERY_TIME = 0 SECONDS \r\nG" +
            "O\r\nEXEC sys.sp_db_vardecimal_storage_format N\'DataCenter\', N\'ON\'\r\nGO\r\nUSE [DataC" +
            "enter]\r\nGO\r\n/****** Object:  StoredProcedure [dbo].[CategoryByUser]    Script Da" +
            "te: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER " +
            "ON\r\nGO\r\n-- =============================================\r\n-- Author:\t\t<Author,,N" +
            "ame>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =====" +
            "========================================\r\nCREATE PROCEDURE [dbo].[CategoryByUser" +
            "] \r\n\t-- Add the parameters for the stored procedure here\r\n\t@UserID int\r\nAS\r\n\r\nDE" +
            "CLARE  @CanRead bit, @CanWrite bit, @CanInsert bit, @CanDelete bit, \r\n@CategoryI" +
            "d int, @CategoryName nvarchar(50), @CreateIn datetime, @ModifyIn datetime, @User" +
            "In int, @ParentID int, @Info nvarchar(255), @active bit\r\n\r\nDECLARE cur CURSOR  F" +
            "or SELECT CategoryId, CategoryName, CreateIn, ModifyIn, UserIn, ParentID, Info, " +
            "active, 1 AS CanRead FROM Category\r\nWHERE\r\nEXISTS(SELECT * FROM CategoryRole WHE" +
            "RE CategoryId = Category.CategoryId AND CanRead = 1 AND EXISTS(SELECT RoleId FRO" +
            "M UserRole WHERE UserId = @UserID))\r\nOR\r\nEXISTS(SELECT * FROM CategoryUser WHERE" +
            " CategoryId = Category.CategoryId AND CanRead = 1 AND UserID = @UserID)\r\n\r\nOpen " +
            "cur\r\nFETCH NEXT FROM cur INTO @CategoryId, @CategoryName, @CreateIn, @ModifyIn, " +
            "@UserIn, @ParentID, @Info, @active, @CanRead\r\nWhile @@FETCH_STATUS = 0\r\nBEGIN\r\n\t" +
            "-- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- interfering with " +
            "SELECT statements.\r\n\tSET NOCOUNT ON;\r\n\r\n\tif exists (select CanWrite from Categor" +
            "yRole where CanWrite = 1 AND CategoryId = @CategoryId AND EXISTS(SELECT RoleID F" +
            "ROM UserRole WHERE UserId = @UserID))\r\n\tset @CanWrite = 1\r\n\telse\r\n\tset @CanWrite" +
            " = 0\r\n\r\n\tif exists (select CanInsert from CategoryRole where CanInsert = 1 AND C" +
            "ategoryId = @CategoryId AND EXISTS(SELECT RoleID FROM UserRole WHERE UserId = @U" +
            "serID))\r\n\tset @CanInsert = 1\r\n\telse\r\n\tset @CanInsert = 0\r\n\r\n\tif exists (select C" +
            "anDelete from CategoryRole where CanDelete = 1 AND CategoryId = @CategoryId AND " +
            "EXISTS(SELECT RoleID FROM UserRole WHERE UserId = @UserID))\r\n\tset @CanDelete = 1" +
            "\r\n\telse\r\n\tset @CanDelete = 0\r\n    -- Insert statements for procedure here\r\n\tSELE" +
            "CT @CategoryId AS CategoryId, @CategoryName AS CategoryName, @CreateIn AS Create" +
            "In, @ModifyIn AS ModifyIn, @UserIn AS UserIn, \r\n\t@ParentID AS ParentID, @Info AS" +
            " Info, @active AS active, @CanRead AS CanRead, @CanWrite AS CanWrite, @CanInsert" +
            " AS CanInsert, @CanDelete AS CanDelete\r\n\t\r\n\tFETCH NEXT FROM cur INTO @CategoryId" +
            ", @CategoryName, @CreateIn, @ModifyIn, @UserIn, @ParentID, @Info, @active, @CanR" +
            "ead\r\nEND\r\nClose cur\r\nDEALLOCATE cur\r\n\r\nGO\r\n/****** Object:  StoredProcedure [dbo" +
            "].[DeleteInheritanceRole]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANS" +
            "I_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\n-- ===============================" +
            "==============\r\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- " +
            "Description:\t<Description,,>\r\n-- =============================================\r\n" +
            "CREATE PROCEDURE [dbo].[DeleteInheritanceRole]\r\n\t-- Add the parameters for the s" +
            "tored procedure here\r\n\t@CategoryId INT, @RoleID INT\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT " +
            "ON added to prevent extra result sets from\r\n\t-- interfering with SELECT statemen" +
            "ts.\r\n\tSET NOCOUNT ON;\r\n\r\n    --get all data needed\r\n;WITH ret (CategoryId, Paren" +
            "tID) AS(\r\n    SELECT CategoryId, ParentID FROM Category WHERE CategoryId = @Cate" +
            "goryId\r\n    UNION ALL\r\n\tSELECT t.CategoryId, t.ParentID FROM Category t INNER JO" +
            "IN ret r ON t.ParentID = r.CategoryId\r\n)\r\n--deleting\r\nDELETE CategoryRole FROM C" +
            "ategoryRole c\r\nJOIN ret d ON c.CategoryId = d.CategoryId\r\nWHERE d.CategoryId <> " +
            "@CategoryId AND c.RoleID = @RoleID\r\nEND\r\n\r\nGO\r\n/****** Object:  StoredProcedure " +
            "[dbo].[DeleteInheritanceUser]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET" +
            " ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\n-- ===========================" +
            "==================\r\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r" +
            "\n-- Description:\t<Description,,>\r\n-- ===========================================" +
            "==\r\nCREATE PROCEDURE [dbo].[DeleteInheritanceUser]\r\n\t-- Add the parameters for t" +
            "he stored procedure here\r\n\t@CategoryId INT, @UserID INT\r\nAS\r\nBEGIN\r\n\t-- SET NOCO" +
            "UNT ON added to prevent extra result sets from\r\n\t-- interfering with SELECT stat" +
            "ements.\r\n\tSET NOCOUNT ON;\r\n\r\n    --get all data needed\r\n;WITH ret (CategoryId, P" +
            "arentID) AS(\r\n    SELECT CategoryId, ParentID FROM Category WHERE CategoryId = @" +
            "CategoryId\r\n    UNION ALL\r\n\tSELECT t.CategoryId, t.ParentID FROM Category t INNE" +
            "R JOIN ret r ON t.ParentID = r.CategoryId\r\n)\r\n--deleting\r\nDELETE CategoryUser FR" +
            "OM CategoryUser c\r\nJOIN ret d ON c.CategoryId = d.CategoryId\r\nWHERE d.CategoryId" +
            " <> @CategoryId AND c.UserID = @UserID\r\nEND\r\n\r\nGO\r\n/****** Object:  StoredProced" +
            "ure [dbo].[ItemByUser]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_N" +
            "ULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\n\r\n-- ================================" +
            "=============\r\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- D" +
            "escription:\t<Description,,>\r\n-- =============================================\r\nC" +
            "REATE PROCEDURE [dbo].[ItemByUser] \r\n\t-- Add the parameters for the stored proce" +
            "dure here\r\n\t@UserID int, @CategoryId int\r\nAS\r\n\r\nDECLARE  @CanRead bit, @CanWrite" +
            " bit, @CanInsert bit, @CanDelete bit, \r\n@ItemId int, @ItemName nvarchar(50), @Ph" +
            "ysicalName nvarchar(50), @TypeId int,  @Info nvarchar(255), \r\n @CreateIn datetim" +
            "e, @OwnerId int, @ModifyIn datetime, @UserIn int, @ParentID int, @active bit, @L" +
            "ocker bit\r\n\r\nDECLARE cur CURSOR  For SELECT ItemId, ItemName, PhysicalName, Type" +
            "Id, CategoryId, Info, CreateIn, OwnerId, ModifyIn, UserIn, active, Locker, \r\n1 A" +
            "S CanRead FROM Item\r\nWHERE CategoryId = @CategoryId AND\r\nEXISTS(SELECT ItemId FR" +
            "OM ItemRole WHERE ItemId = Item.ItemId AND CanRead = 1 AND EXISTS(SELECT RoleId " +
            "FROM UserRole WHERE UserId = @UserID))\r\nOR\r\nEXISTS(SELECT CategoryId FROM Catego" +
            "ryRole WHERE CategoryId = Item.CategoryId AND CanRead = 1 AND EXISTS(SELECT Role" +
            "Id FROM UserRole WHERE UserId = @UserID))\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM It" +
            "emRole WHERE ItemId = Item.ItemId AND CanRead = 0 AND EXISTS(SELECT RoleId FROM " +
            "UserRole WHERE UserId = @UserID))\r\n\r\nOpen cur\r\nFETCH NEXT FROM cur INTO @ItemId," +
            " @ItemName, @PhysicalName, @TypeId, @CategoryId, @Info, @CreateIn, @OwnerId, @Mo" +
            "difyIn, @UserIn, @active, @Locker, @CanRead\r\nWhile @@FETCH_STATUS = 0\r\nBEGIN\r\n\t-" +
            "- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- interfering with S" +
            "ELECT statements.\r\n\tSET NOCOUNT ON;\r\n\r\n\tif exists (select CanWrite from Category" +
            "Role where CanWrite = 1 AND CategoryId = @CategoryId AND EXISTS(SELECT RoleID FR" +
            "OM UserRole WHERE UserId = @UserID) AND\r\n\tNOT EXISTS(SELECT ItemId FROM ItemRole" +
            " WHERE ItemId = @ItemId AND CanWrite = 0 AND EXISTS(SELECT RoleId FROM UserRole " +
            "WHERE UserId = @UserID)))\r\n\tset @CanWrite = 1\r\n\telse\r\n\tset @CanWrite = 0\r\n\r\n\tif " +
            "exists (select CanInsert from CategoryRole where CanInsert = 1 AND CategoryId = " +
            "@CategoryId AND EXISTS(SELECT RoleID FROM UserRole WHERE UserId = @UserID) AND\r\n" +
            "\tNOT EXISTS(SELECT ItemId FROM ItemRole WHERE ItemId = @ItemId AND CanInsert = 0" +
            " AND EXISTS(SELECT RoleId FROM UserRole WHERE UserId = @UserID)))\r\n\tset @CanInse" +
            "rt = 1\r\n\telse\r\n\tset @CanInsert = 0\r\n\r\n\tif exists (select CanDelete from Category" +
            "Role where CanDelete = 1 AND CategoryId = @CategoryId AND EXISTS(SELECT RoleID F" +
            "ROM UserRole WHERE UserId = @UserID) AND\r\n\tNOT EXISTS(SELECT ItemId FROM ItemRol" +
            "e WHERE ItemId = @ItemId AND CanDelete = 0 AND EXISTS(SELECT RoleId FROM UserRol" +
            "e WHERE UserId = @UserID)))\r\n\tset @CanDelete = 1\r\n\telse\r\n\tset @CanDelete = 0\r\n  " +
            "  -- Insert statements for procedure here\r\n\tSELECT @ItemId AS ItemId, @ItemName " +
            "AS ItemName, @PhysicalName AS PhysicalName, @TypeId AS TypeId, @CategoryId AS Ca" +
            "tegoryId, @Info AS Info, @CreateIn AS CreateIn, \r\n\t@OwnerId AS OwnerId, @ModifyI" +
            "n AS ModifyIn, @UserIn AS UserIn, @active AS active, @Locker AS Locker,\r\n\t@CanRe" +
            "ad AS CanRead, @CanWrite AS CanWrite, @CanInsert AS CanInsert, @CanDelete AS Can" +
            "Delete\r\n\t\r\n\tFETCH NEXT FROM cur INTO @ItemId, @ItemName, @PhysicalName, @TypeId," +
            " @CategoryId, @Info, @CreateIn, @OwnerId, @ModifyIn, @UserIn, @active, @Locker, " +
            "@CanRead\r\nEND\r\nClose cur\r\nDEALLOCATE cur\r\n\r\n\r\nGO\r\n/****** Object:  StoredProcedu" +
            "re [dbo].[UpdateInheritanceRole]    Script Date: 10/18/2013 7:09:46 AM ******/\r\n" +
            "SET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\n-- ========================" +
            "=====================\r\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date," +
            ",>\r\n-- Description:\t<Description,,>\r\n-- ========================================" +
            "=====\r\nCREATE PROCEDURE [dbo].[UpdateInheritanceRole] \r\n\t-- Add the parameters f" +
            "or the stored procedure here\r\n@CategoryId INT, @RoleID INT, @CanRead bit, @CanWr" +
            "ite bit, @CanInsert bit, @CanDelete bit, @Inheritance bit, @UserLevelId int, @Gr" +
            "antId int\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT ON added to prevent extra result sets from" +
            "\r\n\t-- interfering with SELECT statements.\r\n\tSET NOCOUNT ON;\r\n\r\n\r\n--get all data " +
            "needed\r\n;WITH ret (CategoryId, ParentID) AS(\r\n    SELECT CategoryId, ParentID FR" +
            "OM Category WHERE CategoryId = @CategoryId\r\n    UNION ALL\r\n\tSELECT t.CategoryId," +
            " t.ParentID FROM Category t INNER JOIN ret r ON t.ParentID = r.CategoryId\r\n)\r\n--" +
            "get data needed to update\r\n,ret2 AS(\r\n\tSELECT CategoryId, ParentID FROM ret WHER" +
            "E CategoryId <> @CategoryId AND \r\n\tEXISTS(SELECT * FROM CategoryRole WHERE RoleI" +
            "D = @RoleID AND CategoryId = ret.CategoryId)\r\n)\r\n--updating\r\n\tUPDATE CategoryRol" +
            "e SET CanRead = @CanRead, CanWrite = @CanWrite, CanInsert = @CanInsert, CanDelet" +
            "e = @CanDelete, Inheritance = @Inheritance,\r\n\tInheritanceCategoryId = @CategoryI" +
            "d, UserLevelId = @UserLevelId, GrantId = @GrantId\r\n\tFROM CategoryRole AS c JOIN " +
            "ret2 AS d ON c.CategoryId = d.CategoryId\r\n\tWHERE c.RoleID = @RoleID\r\n--get all d" +
            "ata needed\r\n;WITH ret (CategoryId, ParentID) AS(\r\n    SELECT CategoryId, ParentI" +
            "D FROM Category WHERE CategoryId = @CategoryId\r\n    UNION ALL\r\n\tSELECT t.Categor" +
            "yId, t.ParentID FROM Category t INNER JOIN ret r ON t.ParentID = r.CategoryId\r\n)" +
            "\r\n--get data needed to insert\r\n,ret2 AS(\r\n\tSELECT CategoryId, ParentID FROM ret " +
            "WHERE CategoryId <> @CategoryId AND \r\n\tNOT EXISTS(SELECT * FROM CategoryRole WHE" +
            "RE RoleID = @RoleID AND CategoryId = ret.CategoryId)\r\n)\r\n--inserting\r\nINSERT INT" +
            "O CategoryRole (RoleID, CategoryId, CanRead, CanWrite, CanInsert, CanDelete, Inh" +
            "eritance, InheritanceCategoryId, UserLevelId, GrantId)\r\nSELECT @RoleID, Category" +
            "Id, @CanRead, @CanWrite, @CanInsert, @CanDelete, @Inheritance, @CategoryId, @Use" +
            "rLevelId, @GrantId FROM ret2\r\n\r\nEND\r\n\r\nGO\r\n/****** Object:  StoredProcedure [dbo" +
            "].[UpdateInheritanceUser]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANS" +
            "I_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\n-- ===============================" +
            "==============\r\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- " +
            "Description:\t<Description,,>\r\n-- =============================================\r\n" +
            "CREATE PROCEDURE [dbo].[UpdateInheritanceUser] \r\n\t-- Add the parameters for the " +
            "stored procedure here\r\n@CategoryId INT, @UserID INT, @CanRead bit, @CanWrite bit" +
            ", @CanInsert bit, @CanDelete bit, @Inheritance bit, @UserLevelId int, @GrantId i" +
            "nt\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- i" +
            "nterfering with SELECT statements.\r\n\tSET NOCOUNT ON;\r\n\r\n\r\n--get all data needed\r" +
            "\n;WITH ret (CategoryId, ParentID) AS(\r\n    SELECT CategoryId, ParentID FROM Cate" +
            "gory WHERE CategoryId = @CategoryId\r\n    UNION ALL\r\n\tSELECT t.CategoryId, t.Pare" +
            "ntID FROM Category t INNER JOIN ret r ON t.ParentID = r.CategoryId\r\n)\r\n--get dat" +
            "a needed to update\r\n,ret2 AS(\r\n\tSELECT CategoryId, ParentID FROM ret WHERE Categ" +
            "oryId <> @CategoryId AND \r\n\tEXISTS(SELECT * FROM CategoryUser WHERE UserID = @Us" +
            "erID AND CategoryId = ret.CategoryId)\r\n)\r\n--updating\r\n\tUPDATE CategoryUser SET C" +
            "anRead = @CanRead, CanWrite = @CanWrite, CanInsert = @CanInsert, CanDelete = @Ca" +
            "nDelete, Inheritance = @Inheritance,\r\n\tInheritanceCategoryId = @CategoryId, User" +
            "LevelId = @UserLevelId, GrantId = @GrantId\r\n\tFROM CategoryUser AS c JOIN ret2 AS" +
            " d ON c.CategoryId = d.CategoryId\r\n\tWHERE c.UserID = @UserID\r\n--get all data nee" +
            "ded\r\n;WITH ret (CategoryId, ParentID) AS(\r\n    SELECT CategoryId, ParentID FROM " +
            "Category WHERE CategoryId = @CategoryId\r\n    UNION ALL\r\n\tSELECT t.CategoryId, t." +
            "ParentID FROM Category t INNER JOIN ret r ON t.ParentID = r.CategoryId\r\n)\r\n--get" +
            " data needed to insert\r\n,ret2 AS(\r\n\tSELECT CategoryId, ParentID FROM ret WHERE C" +
            "ategoryId <> @CategoryId AND \r\n\tNOT EXISTS(SELECT * FROM CategoryUser WHERE User" +
            "ID = @UserID AND CategoryId = ret.CategoryId)\r\n)\r\n--inserting\r\nINSERT INTO Categ" +
            "oryUser (UserID, CategoryId, CanRead, CanWrite, CanInsert, CanDelete, Inheritanc" +
            "e, InheritanceCategoryId, UserLevelId, GrantId)\r\nSELECT @UserID, CategoryId, @Ca" +
            "nRead, @CanWrite, @CanInsert, @CanDelete, @Inheritance, @CategoryId, @UserLevelI" +
            "d, @GrantId FROM ret2\r\n\r\nEND\r\n\r\nGO\r\n/****** Object:  Table [dbo].[AppRole]    Sc" +
            "ript Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDEN" +
            "TIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[AppRole](\r\n\t[RoleID] [int] NOT NULL,\r\n\t[MenuI" +
            "temName] [nvarchar](50) NOT NULL,\r\n\t[Selecting] [bit] NULL,\r\n\t[Inserting] [bit] " +
            "NULL,\r\n\t[Updateing] [bit] NULL,\r\n\t[Deleting] [bit] NULL,\r\n CONSTRAINT [PK_RoleDe" +
            "tial] PRIMARY KEY CLUSTERED \r\n(\r\n\t[RoleID] ASC,\r\n\t[MenuItemName] ASC\r\n)WITH (PAD" +
            "_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCK" +
            "S = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Objec" +
            "t:  Table [dbo].[AssociationApp]    Script Date: 10/18/2013 7:09:46 AM ******/\r\n" +
            "SET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[Associa" +
            "tionApp](\r\n\t[AssociationId] [int] NOT NULL,\r\n\t[AssociationName] [nvarchar](50) N" +
            "ULL,\r\n CONSTRAINT [PK_AssociationApp] PRIMARY KEY CLUSTERED \r\n(\r\n\t[AssociationId" +
            "] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OF" +
            "F, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\n" +
            "GO\r\n/****** Object:  Table [dbo].[Category]    Script Date: 10/18/2013 7:09:46 A" +
            "M ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [db" +
            "o].[Category](\r\n\t[CategoryId] [int] NOT NULL,\r\n\t[CategoryName] [nvarchar](50) NO" +
            "T NULL,\r\n\t[CreateIn] [datetime] NULL,\r\n\t[OwnerId] [int] NULL,\r\n\t[ModifyIn] [date" +
            "time] NULL,\r\n\t[UserIn] [int] NULL,\r\n\t[ParentID] [int] NULL,\r\n\t[Info] [nvarchar](" +
            "255) NULL,\r\n\t[IconId] [int] NULL,\r\n\t[active] [bit] NULL,\r\n CONSTRAINT [PK_Catego" +
            "ry] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CategoryId] ASC\r\n)WITH (PAD_INDEX = OFF, STATIS" +
            "TICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_L" +
            "OCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[Cat" +
            "egoryRole]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r" +
            "\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[CategoryRole](\r\n\t[CategoryId]" +
            " [int] NOT NULL,\r\n\t[RoleID] [int] NOT NULL,\r\n\t[CanRead] [bit] NULL,\r\n\t[CanWrite]" +
            " [bit] NULL,\r\n\t[CanInsert] [bit] NULL,\r\n\t[CanDelete] [bit] NULL,\r\n\t[Inheritance]" +
            " [bit] NULL,\r\n\t[InheritanceCategoryId] [int] NULL,\r\n\t[UserLevelId] [int] NULL,\r\n" +
            "\t[GrantId] [int] NULL,\r\n CONSTRAINT [PK_CategoryRole] PRIMARY KEY CLUSTERED \r\n(\r" +
            "\n\t[CategoryId] ASC,\r\n\t[RoleID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPU" +
            "TE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON " +
            "[PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[CategoryUser]    " +
            "Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_ID" +
            "ENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[CategoryUser](\r\n\t[UserID] [int] NOT NULL,\r\n" +
            "\t[CategoryId] [int] NOT NULL,\r\n\t[CanRead] [bit] NULL,\r\n\t[CanWrite] [bit] NULL,\r\n" +
            "\t[CanInsert] [bit] NULL,\r\n\t[CanDelete] [bit] NULL,\r\n\t[Inheritance] [bit] NULL,\r\n" +
            "\t[InheritanceCategoryId] [int] NULL,\r\n\t[UserLevelId] [int] NULL,\r\n\t[GrantId] [in" +
            "t] NULL,\r\n CONSTRAINT [PK_CategoryUser] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UserID] ASC" +
            ",\r\n\t[CategoryId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNO" +
            "RE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) O" +
            "N [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[Grant]    Script Date: 10/18/20" +
            "13 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREA" +
            "TE TABLE [dbo].[Grant](\r\n\t[GrantId] [int] NOT NULL,\r\n\t[GrantName] [nvarchar](50)" +
            " NULL,\r\n CONSTRAINT [PK_Grand] PRIMARY KEY CLUSTERED \r\n(\r\n\t[GrantId] ASC\r\n)WITH " +
            "(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_" +
            "LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** O" +
            "bject:  Table [dbo].[Icons]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET A" +
            "NSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[Icons](\r\n\t[I" +
            "conId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[IconName] [nvarchar](50) NULL,\r\n\t[IconDa" +
            "ta] [image] NULL,\r\n\t[active] [bit] NULL,\r\n CONSTRAINT [PK_Icons] PRIMARY KEY CLU" +
            "STERED \r\n(\r\n\t[IconId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF," +
            " IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]" +
            "\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[Ite" +
            "m]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUO" +
            "TED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[Item](\r\n\t[ItemId] [int] NOT NULL,\r\n\t[" +
            "ItemName] [nvarchar](50) NULL,\r\n\t[PhysicalName] [nvarchar](50) NULL,\r\n\t[TypeId] " +
            "[int] NULL,\r\n\t[CategoryId] [int] NULL,\r\n\t[Info] [nvarchar](255) NULL,\r\n\t[CreateI" +
            "n] [datetime] NULL,\r\n\t[OwnerId] [int] NULL,\r\n\t[ModifyIn] [datetime] NULL,\r\n\t[Use" +
            "rIn] [int] NULL,\r\n\t[active] [bit] NULL,\r\n\t[Locker] [bit] NULL,\r\n CONSTRAINT [PK_" +
            "Item] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ItemId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTI" +
            "CS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOC" +
            "KS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[ItemR" +
            "ole]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET Q" +
            "UOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[ItemRole](\r\n\t[ItemId] [int] NOT NUL" +
            "L,\r\n\t[RoleID] [int] NOT NULL,\r\n\t[CanRead] [bit] NULL,\r\n\t[CanWrite] [bit] NULL,\r\n" +
            "\t[CanInsert] [bit] NULL,\r\n\t[CanDelete] [bit] NULL,\r\n\t[GrantId] [int] NULL,\r\n CON" +
            "STRAINT [PK_ItemRole] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ItemId] ASC,\r\n\t[RoleID] ASC\r\n" +
            ")WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLO" +
            "W_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/**" +
            "**** Object:  Table [dbo].[ItemUser]    Script Date: 10/18/2013 7:09:46 AM *****" +
            "*/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[Ite" +
            "mUser](\r\n\t[ItemId] [int] NOT NULL,\r\n\t[UserID] [int] NOT NULL,\r\n\t[CanRead] [bit] " +
            "NULL,\r\n\t[CanWrite] [bit] NULL,\r\n\t[CanInsert] [bit] NULL,\r\n\t[CanDelete] [bit] NUL" +
            "L,\r\n\t[GrantId] [int] NULL,\r\n CONSTRAINT [PK_ItemUser] PRIMARY KEY CLUSTERED \r\n(\r" +
            "\n\t[ItemId] ASC,\r\n\t[UserID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE =" +
            " OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRI" +
            "MARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[LogOpType]    Script " +
            "Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIE" +
            "R ON\r\nGO\r\nCREATE TABLE [dbo].[LogOpType](\r\n\t[LogOpId] [int] NOT NULL,\r\n\t[Operati" +
            "onName] [nvarchar](50) NULL,\r\n CONSTRAINT [PK_Operation] PRIMARY KEY CLUSTERED \r" +
            "\n(\r\n\t[LogOpId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE" +
            "_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON " +
            "[PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[Logs]    Script Date: 10/18/2013 " +
            "7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE " +
            "TABLE [dbo].[Logs](\r\n\t[id] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[LogTypeId] [int] " +
            "NULL,\r\n\t[LogIndex] [int] NULL,\r\n\t[LogIndexExtra] [int] NULL,\r\n\t[LogOpId] [int] N" +
            "ULL,\r\n\t[LogDate] [datetime] NULL,\r\n\t[UserId] [int] NULL,\r\n CONSTRAINT [PK_Logs] " +
            "PRIMARY KEY CLUSTERED \r\n(\r\n\t[id] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOM" +
            "PUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) O" +
            "N [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[LogType]    Scr" +
            "ipt Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENT" +
            "IFIER ON\r\nGO\r\nCREATE TABLE [dbo].[LogType](\r\n\t[LogTypeId] [int] NOT NULL,\r\n\t[Log" +
            "TypeName] [nvarchar](50) NULL,\r\n CONSTRAINT [PK_LogType] PRIMARY KEY CLUSTERED \r" +
            "\n(\r\n\t[LogTypeId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNO" +
            "RE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) O" +
            "N [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[Roles]    Script Date: 10/18/20" +
            "13 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREA" +
            "TE TABLE [dbo].[Roles](\r\n\t[RoleID] [int] NOT NULL,\r\n\t[RoleName] [nvarchar](100) " +
            "NOT NULL,\r\n\t[RoleDesc] [nvarchar](255) NULL,\r\n CONSTRAINT [PK_Roles] PRIMARY KEY" +
            " CLUSTERED \r\n(\r\n\t[RoleID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = " +
            "OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIM" +
            "ARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[ServerOption]    Scrip" +
            "t Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIF" +
            "IER ON\r\nGO\r\nCREATE TABLE [dbo].[ServerOption](\r\n\t[OptionId] [int] NOT NULL,\r\n\t[O" +
            "ptionName] [nvarchar](50) NULL,\r\n\t[OptionValue] [nvarchar](255) NULL,\r\n CONSTRAI" +
            "NT [PK_ServerOption] PRIMARY KEY CLUSTERED \r\n(\r\n\t[OptionId] ASC\r\n)WITH (PAD_INDE" +
            "X = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = O" +
            "N, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  T" +
            "able [dbo].[Types]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS" +
            " ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo].[Types](\r\n\t[TypeId] [i" +
            "nt] IDENTITY(1,1) NOT NULL,\r\n\t[TypeName] [nvarchar](50) NULL,\r\n\t[TypeIconData] [" +
            "image] NULL,\r\n\t[AssociationId] [int] NULL,\r\n\t[Info] [nvarchar](255) NULL,\r\n\t[act" +
            "ive] [bit] NULL,\r\n CONSTRAINT [PK_Type] PRIMARY KEY CLUSTERED \r\n(\r\n\t[TypeId] ASC" +
            "\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, AL" +
            "LOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAG" +
            "E_ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[UserLevel]    Script Date: 1" +
            "0/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nG" +
            "O\r\nCREATE TABLE [dbo].[UserLevel](\r\n\t[UserLevelId] [int] NOT NULL,\r\n\t[UserLevelN" +
            "ame] [nvarchar](50) NULL,\r\n CONSTRAINT [PK_UserLevel] PRIMARY KEY CLUSTERED \r\n(\r" +
            "\n\t[UserLevelId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNOR" +
            "E_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON" +
            " [PRIMARY]\r\n\r\nGO\r\n/****** Object:  Table [dbo].[UserRole]    Script Date: 10/18/" +
            "2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCR" +
            "EATE TABLE [dbo].[UserRole](\r\n\t[UserId] [int] NOT NULL,\r\n\t[RoleId] [int] NOT NUL" +
            "L,\r\n CONSTRAINT [PK_UserRoles] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UserId] ASC,\r\n\t[Role" +
            "Id] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = " +
            "OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n" +
            "\r\nGO\r\n/****** Object:  Table [dbo].[Users]    Script Date: 10/18/2013 7:09:46 AM" +
            " ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE TABLE [dbo" +
            "].[Users](\r\n\t[UserID] [int] NOT NULL,\r\n\t[UserName] [nvarchar](50) NOT NULL,\r\n\t[U" +
            "serPass] [nvarchar](50) NOT NULL,\r\n\t[RealName] [nvarchar](50) NULL,\r\n\t[UserLevel" +
            "Id] [int] NULL,\r\n\t[IsActive] [bit] NULL,\r\n\t[LastActivityDate] [datetime] NULL,\r\n" +
            " CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UserID] ASC\r\n)WITH (PAD_INDE" +
            "X = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = O" +
            "N, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\n\r\nGO\r\n/****** Object:  V" +
            "iew [dbo].[vCategory]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NU" +
            "LLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE VIEW [dbo].[vCategory]\r\nAS\r\nSEL" +
            "ECT        dbo.Category.CategoryId, dbo.Category.CategoryName, dbo.Category.Crea" +
            "teIn, dbo.Category.OwnerId, dbo.Category.ModifyIn, dbo.Category.UserIn, \r\n      " +
            "                   dbo.Category.ParentID, dbo.Category.Info, dbo.Category.active" +
            ", dbo.Users.RealName AS OwnerRealName, Users_1.RealName AS LastRealName, \r\n     " +
            "                    Category_1.CategoryName AS ParentCategoryName\r\nFROM         " +
            "   dbo.Category LEFT OUTER JOIN\r\n                         dbo.Users AS Users_1 O" +
            "N dbo.Category.UserIn = Users_1.UserID LEFT OUTER JOIN\r\n                        " +
            " dbo.Users ON dbo.Category.OwnerId = dbo.Users.UserID LEFT OUTER JOIN\r\n         " +
            "                dbo.Category AS Category_1 ON dbo.Category.ParentID = Category_1" +
            ".CategoryId\r\n\r\nGO\r\n/****** Object:  View [dbo].[vGrant]    Script Date: 10/18/20" +
            "13 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREA" +
            "TE VIEW [dbo].[vGrant]\r\nAS\r\nSELECT        GrantId, GrantName\r\nFROM            db" +
            "o.[Grant]\r\n\r\nGO\r\n/****** Object:  View [dbo].[vItems]    Script Date: 10/18/2013" +
            " 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE" +
            " VIEW [dbo].[vItems]\r\nAS\r\nSELECT        dbo.Item.ItemId, dbo.Item.ItemName, dbo." +
            "Item.PhysicalName, dbo.Item.TypeId, dbo.Item.CategoryId, dbo.Item.Info, dbo.Item" +
            ".CreateIn, dbo.Item.ModifyIn, \r\n                         dbo.Item.UserIn, dbo.It" +
            "em.active, dbo.Item.Locker, dbo.Category.CategoryName, dbo.Users.RealName, dbo.T" +
            "ypes.TypeName, dbo.Types.TypeIconData\r\nFROM            dbo.Item LEFT OUTER JOIN\r" +
            "\n                         dbo.Types ON dbo.Item.TypeId = dbo.Types.TypeId LEFT O" +
            "UTER JOIN\r\n                         dbo.Category ON dbo.Item.CategoryId = dbo.Ca" +
            "tegory.CategoryId LEFT OUTER JOIN\r\n                         dbo.Users ON dbo.Ite" +
            "m.UserIn = dbo.Users.UserID\r\n\r\nGO\r\n/****** Object:  View [dbo].[vLogOpType]    S" +
            "cript Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDE" +
            "NTIFIER ON\r\nGO\r\nCREATE VIEW [dbo].[vLogOpType]\r\nAS\r\nSELECT        LogOpId, Opera" +
            "tionName\r\nFROM            dbo.LogOpType\r\n\r\nGO\r\n/****** Object:  View [dbo].[vLog" +
            "Type]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET " +
            "QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE VIEW [dbo].[vLogType]\r\nAS\r\nSELECT        LogTyp" +
            "eId, LogTypeName\r\nFROM            dbo.LogType\r\n\r\nGO\r\n/****** Object:  View [dbo]" +
            ".[vRoles]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\nGO\r\n" +
            "SET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE VIEW [dbo].[vRoles]\r\nAS\r\nSELECT        Role" +
            "ID, RoleName, RoleDesc\r\nFROM            dbo.Roles\r\n\r\nGO\r\n/****** Object:  View [" +
            "dbo].[vUsers]    Script Date: 10/18/2013 7:09:46 AM ******/\r\nSET ANSI_NULLS ON\r\n" +
            "GO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCREATE VIEW [dbo].[vUsers]\r\nAS\r\nSELECT        " +
            "dbo.Users.UserID, dbo.Users.UserName, dbo.Users.UserPass, dbo.Users.RealName, db" +
            "o.Users.UserLevelId, dbo.Users.IsActive, \r\n                         dbo.Users.La" +
            "stActivityDate, dbo.UserLevel.UserLevelName\r\nFROM            dbo.Users LEFT OUTE" +
            "R JOIN\r\n                         dbo.UserLevel ON dbo.Users.UserLevelId = dbo.Us" +
            "erLevel.UserLevelId\r\n\r\nGO\r\nALTER TABLE [dbo].[Types] ADD  CONSTRAINT [DF_Types_A" +
            "ssociationId]  DEFAULT ((0)) FOR [AssociationId]\r\nGO\r\nALTER TABLE [dbo].[AppRole" +
            "]  WITH CHECK ADD  CONSTRAINT [FK_AppRole_Roles] FOREIGN KEY([RoleID])\r\nREFERENC" +
            "ES [dbo].[Roles] ([RoleID])\r\nGO\r\nALTER TABLE [dbo].[AppRole] CHECK CONSTRAINT [F" +
            "K_AppRole_Roles]\r\nGO\r\nALTER TABLE [dbo].[Category]  WITH CHECK ADD  CONSTRAINT [" +
            "FK_Category_Icons] FOREIGN KEY([IconId])\r\nREFERENCES [dbo].[Icons] ([IconId])\r\nG" +
            "O\r\nALTER TABLE [dbo].[Category] CHECK CONSTRAINT [FK_Category_Icons]\r\nGO\r\nALTER " +
            "TABLE [dbo].[Category]  WITH CHECK ADD  CONSTRAINT [FK_Category_Users] FOREIGN K" +
            "EY([OwnerId])\r\nREFERENCES [dbo].[Users] ([UserID])\r\nGO\r\nALTER TABLE [dbo].[Categ" +
            "ory] CHECK CONSTRAINT [FK_Category_Users]\r\nGO\r\nALTER TABLE [dbo].[Category]  WIT" +
            "H CHECK ADD  CONSTRAINT [FK_Category_Users1] FOREIGN KEY([UserIn])\r\nREFERENCES [" +
            "dbo].[Users] ([UserID])\r\nGO\r\nALTER TABLE [dbo].[Category] CHECK CONSTRAINT [FK_C" +
            "ategory_Users1]\r\nGO\r\nALTER TABLE [dbo].[CategoryRole]  WITH CHECK ADD  CONSTRAIN" +
            "T [FK_CategoryRole_Category] FOREIGN KEY([CategoryId])\r\nREFERENCES [dbo].[Catego" +
            "ry] ([CategoryId])\r\nGO\r\nALTER TABLE [dbo].[CategoryRole] CHECK CONSTRAINT [FK_Ca" +
            "tegoryRole_Category]\r\nGO\r\nALTER TABLE [dbo].[CategoryRole]  WITH CHECK ADD  CONS" +
            "TRAINT [FK_CategoryRole_Grant] FOREIGN KEY([GrantId])\r\nREFERENCES [dbo].[Grant] " +
            "([GrantId])\r\nGO\r\nALTER TABLE [dbo].[CategoryRole] CHECK CONSTRAINT [FK_CategoryR" +
            "ole_Grant]\r\nGO\r\nALTER TABLE [dbo].[CategoryRole]  WITH CHECK ADD  CONSTRAINT [FK" +
            "_CategoryRole_Roles] FOREIGN KEY([RoleID])\r\nREFERENCES [dbo].[Roles] ([RoleID])\r" +
            "\nGO\r\nALTER TABLE [dbo].[CategoryRole] CHECK CONSTRAINT [FK_CategoryRole_Roles]\r\n" +
            "GO\r\nALTER TABLE [dbo].[CategoryUser]  WITH CHECK ADD  CONSTRAINT [FK_CategoryUse" +
            "r_Category] FOREIGN KEY([CategoryId])\r\nREFERENCES [dbo].[Category] ([CategoryId]" +
            ")\r\nGO\r\nALTER TABLE [dbo].[CategoryUser] CHECK CONSTRAINT [FK_CategoryUser_Catego" +
            "ry]\r\nGO\r\nALTER TABLE [dbo].[CategoryUser]  WITH CHECK ADD  CONSTRAINT [FK_Catego" +
            "ryUser_Grant] FOREIGN KEY([GrantId])\r\nREFERENCES [dbo].[Grant] ([GrantId])\r\nGO\r\n" +
            "ALTER TABLE [dbo].[CategoryUser] CHECK CONSTRAINT [FK_CategoryUser_Grant]\r\nGO\r\nA" +
            "LTER TABLE [dbo].[CategoryUser]  WITH CHECK ADD  CONSTRAINT [FK_CategoryUser_Use" +
            "rs] FOREIGN KEY([UserID])\r\nREFERENCES [dbo].[Users] ([UserID])\r\nGO\r\nALTER TABLE " +
            "[dbo].[CategoryUser] CHECK CONSTRAINT [FK_CategoryUser_Users]\r\nGO\r\nALTER TABLE [" +
            "dbo].[Item]  WITH CHECK ADD  CONSTRAINT [FK_Item_Category] FOREIGN KEY([Category" +
            "Id])\r\nREFERENCES [dbo].[Category] ([CategoryId])\r\nGO\r\nALTER TABLE [dbo].[Item] C" +
            "HECK CONSTRAINT [FK_Item_Category]\r\nGO\r\nALTER TABLE [dbo].[Item]  WITH CHECK ADD" +
            "  CONSTRAINT [FK_Item_Types] FOREIGN KEY([TypeId])\r\nREFERENCES [dbo].[Types] ([T" +
            "ypeId])\r\nGO\r\nALTER TABLE [dbo].[Item] CHECK CONSTRAINT [FK_Item_Types]\r\nGO\r\nALTE" +
            "R TABLE [dbo].[Item]  WITH CHECK ADD  CONSTRAINT [FK_Item_Users] FOREIGN KEY([Ow" +
            "nerId])\r\nREFERENCES [dbo].[Users] ([UserID])\r\nGO\r\nALTER TABLE [dbo].[Item] CHECK" +
            " CONSTRAINT [FK_Item_Users]\r\nGO\r\nALTER TABLE [dbo].[Item]  WITH CHECK ADD  CONST" +
            "RAINT [FK_Item_Users1] FOREIGN KEY([UserIn])\r\nREFERENCES [dbo].[Users] ([UserID]" +
            ")\r\nGO\r\nALTER TABLE [dbo].[Item] CHECK CONSTRAINT [FK_Item_Users1]\r\nGO\r\nALTER TAB" +
            "LE [dbo].[ItemRole]  WITH CHECK ADD  CONSTRAINT [FK_ItemRole_Grant] FOREIGN KEY(" +
            "[GrantId])\r\nREFERENCES [dbo].[Grant] ([GrantId])\r\nGO\r\nALTER TABLE [dbo].[ItemRol" +
            "e] CHECK CONSTRAINT [FK_ItemRole_Grant]\r\nGO\r\nALTER TABLE [dbo].[ItemRole]  WITH " +
            "CHECK ADD  CONSTRAINT [FK_ItemRole_Item] FOREIGN KEY([ItemId])\r\nREFERENCES [dbo]" +
            ".[Item] ([ItemId])\r\nGO\r\nALTER TABLE [dbo].[ItemRole] CHECK CONSTRAINT [FK_ItemRo" +
            "le_Item]\r\nGO\r\nALTER TABLE [dbo].[ItemRole]  WI")]
        public string CreateDatabaseScript {
            get {
                return ((string)(this["CreateDatabaseScript"]));
            }
            set {
                this["CreateDatabaseScript"] = value;
            }
        }
    }
}
