//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DataCenter.DataSources {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsQueries")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsQueries : global::System.Data.DataSet {
        
        private QryItemsDataTable tableQryItems;
        
        private QryCategoryDataTable tableQryCategory;
        
        private QUERIESDataTable tableQUERIES;
        
        private QryLogsDataTable tableQryLogs;
        
        private vStudentDataTable tablevStudent;
        
        private asaseDataTable tableasase;
        
        private alsofofDataTable tablealsofof;
        
        private faslDataTable tablefasl;
        
        private EmpDataTable tableEmp;
        
        private StudentDataTable tableStudent;
        
        private global::System.Data.DataRelation relationFK_Item_Category;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsQueries() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsQueries(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["QryItems"] != null)) {
                    base.Tables.Add(new QryItemsDataTable(ds.Tables["QryItems"]));
                }
                if ((ds.Tables["QryCategory"] != null)) {
                    base.Tables.Add(new QryCategoryDataTable(ds.Tables["QryCategory"]));
                }
                if ((ds.Tables["QUERIES"] != null)) {
                    base.Tables.Add(new QUERIESDataTable(ds.Tables["QUERIES"]));
                }
                if ((ds.Tables["QryLogs"] != null)) {
                    base.Tables.Add(new QryLogsDataTable(ds.Tables["QryLogs"]));
                }
                if ((ds.Tables["vStudent"] != null)) {
                    base.Tables.Add(new vStudentDataTable(ds.Tables["vStudent"]));
                }
                if ((ds.Tables["asase"] != null)) {
                    base.Tables.Add(new asaseDataTable(ds.Tables["asase"]));
                }
                if ((ds.Tables["alsofof"] != null)) {
                    base.Tables.Add(new alsofofDataTable(ds.Tables["alsofof"]));
                }
                if ((ds.Tables["fasl"] != null)) {
                    base.Tables.Add(new faslDataTable(ds.Tables["fasl"]));
                }
                if ((ds.Tables["Emp"] != null)) {
                    base.Tables.Add(new EmpDataTable(ds.Tables["Emp"]));
                }
                if ((ds.Tables["Student"] != null)) {
                    base.Tables.Add(new StudentDataTable(ds.Tables["Student"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QryItemsDataTable QryItems {
            get {
                return this.tableQryItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QryCategoryDataTable QryCategory {
            get {
                return this.tableQryCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUERIESDataTable QUERIES {
            get {
                return this.tableQUERIES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QryLogsDataTable QryLogs {
            get {
                return this.tableQryLogs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vStudentDataTable vStudent {
            get {
                return this.tablevStudent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public asaseDataTable asase {
            get {
                return this.tableasase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public alsofofDataTable alsofof {
            get {
                return this.tablealsofof;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public faslDataTable fasl {
            get {
                return this.tablefasl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmpDataTable Emp {
            get {
                return this.tableEmp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentDataTable Student {
            get {
                return this.tableStudent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsQueries cln = ((dsQueries)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["QryItems"] != null)) {
                    base.Tables.Add(new QryItemsDataTable(ds.Tables["QryItems"]));
                }
                if ((ds.Tables["QryCategory"] != null)) {
                    base.Tables.Add(new QryCategoryDataTable(ds.Tables["QryCategory"]));
                }
                if ((ds.Tables["QUERIES"] != null)) {
                    base.Tables.Add(new QUERIESDataTable(ds.Tables["QUERIES"]));
                }
                if ((ds.Tables["QryLogs"] != null)) {
                    base.Tables.Add(new QryLogsDataTable(ds.Tables["QryLogs"]));
                }
                if ((ds.Tables["vStudent"] != null)) {
                    base.Tables.Add(new vStudentDataTable(ds.Tables["vStudent"]));
                }
                if ((ds.Tables["asase"] != null)) {
                    base.Tables.Add(new asaseDataTable(ds.Tables["asase"]));
                }
                if ((ds.Tables["alsofof"] != null)) {
                    base.Tables.Add(new alsofofDataTable(ds.Tables["alsofof"]));
                }
                if ((ds.Tables["fasl"] != null)) {
                    base.Tables.Add(new faslDataTable(ds.Tables["fasl"]));
                }
                if ((ds.Tables["Emp"] != null)) {
                    base.Tables.Add(new EmpDataTable(ds.Tables["Emp"]));
                }
                if ((ds.Tables["Student"] != null)) {
                    base.Tables.Add(new StudentDataTable(ds.Tables["Student"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableQryItems = ((QryItemsDataTable)(base.Tables["QryItems"]));
            if ((initTable == true)) {
                if ((this.tableQryItems != null)) {
                    this.tableQryItems.InitVars();
                }
            }
            this.tableQryCategory = ((QryCategoryDataTable)(base.Tables["QryCategory"]));
            if ((initTable == true)) {
                if ((this.tableQryCategory != null)) {
                    this.tableQryCategory.InitVars();
                }
            }
            this.tableQUERIES = ((QUERIESDataTable)(base.Tables["QUERIES"]));
            if ((initTable == true)) {
                if ((this.tableQUERIES != null)) {
                    this.tableQUERIES.InitVars();
                }
            }
            this.tableQryLogs = ((QryLogsDataTable)(base.Tables["QryLogs"]));
            if ((initTable == true)) {
                if ((this.tableQryLogs != null)) {
                    this.tableQryLogs.InitVars();
                }
            }
            this.tablevStudent = ((vStudentDataTable)(base.Tables["vStudent"]));
            if ((initTable == true)) {
                if ((this.tablevStudent != null)) {
                    this.tablevStudent.InitVars();
                }
            }
            this.tableasase = ((asaseDataTable)(base.Tables["asase"]));
            if ((initTable == true)) {
                if ((this.tableasase != null)) {
                    this.tableasase.InitVars();
                }
            }
            this.tablealsofof = ((alsofofDataTable)(base.Tables["alsofof"]));
            if ((initTable == true)) {
                if ((this.tablealsofof != null)) {
                    this.tablealsofof.InitVars();
                }
            }
            this.tablefasl = ((faslDataTable)(base.Tables["fasl"]));
            if ((initTable == true)) {
                if ((this.tablefasl != null)) {
                    this.tablefasl.InitVars();
                }
            }
            this.tableEmp = ((EmpDataTable)(base.Tables["Emp"]));
            if ((initTable == true)) {
                if ((this.tableEmp != null)) {
                    this.tableEmp.InitVars();
                }
            }
            this.tableStudent = ((StudentDataTable)(base.Tables["Student"]));
            if ((initTable == true)) {
                if ((this.tableStudent != null)) {
                    this.tableStudent.InitVars();
                }
            }
            this.relationFK_Item_Category = this.Relations["FK_Item_Category"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsQueries";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsQueries.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableQryItems = new QryItemsDataTable();
            base.Tables.Add(this.tableQryItems);
            this.tableQryCategory = new QryCategoryDataTable();
            base.Tables.Add(this.tableQryCategory);
            this.tableQUERIES = new QUERIESDataTable();
            base.Tables.Add(this.tableQUERIES);
            this.tableQryLogs = new QryLogsDataTable();
            base.Tables.Add(this.tableQryLogs);
            this.tablevStudent = new vStudentDataTable();
            base.Tables.Add(this.tablevStudent);
            this.tableasase = new asaseDataTable();
            base.Tables.Add(this.tableasase);
            this.tablealsofof = new alsofofDataTable();
            base.Tables.Add(this.tablealsofof);
            this.tablefasl = new faslDataTable();
            base.Tables.Add(this.tablefasl);
            this.tableEmp = new EmpDataTable();
            base.Tables.Add(this.tableEmp);
            this.tableStudent = new StudentDataTable();
            base.Tables.Add(this.tableStudent);
            this.relationFK_Item_Category = new global::System.Data.DataRelation("FK_Item_Category", new global::System.Data.DataColumn[] {
                        this.tableQryCategory.CategoryIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableQryItems.CategoryIdColumn}, false);
            this.Relations.Add(this.relationFK_Item_Category);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQryItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQryCategory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQUERIES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQryLogs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevStudent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeasase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializealsofof() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefasl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStudent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsQueries ds = new dsQueries();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QryItemsRowChangeEventHandler(object sender, QryItemsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QryCategoryRowChangeEventHandler(object sender, QryCategoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QUERIESRowChangeEventHandler(object sender, QUERIESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QryLogsRowChangeEventHandler(object sender, QryLogsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vStudentRowChangeEventHandler(object sender, vStudentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void asaseRowChangeEventHandler(object sender, asaseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void alsofofRowChangeEventHandler(object sender, alsofofRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void faslRowChangeEventHandler(object sender, faslRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmpRowChangeEventHandler(object sender, EmpRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StudentRowChangeEventHandler(object sender, StudentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QryItemsDataTable : global::System.Data.TypedTableBase<QryItemsRow> {
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnPhysicalName;
            
            private global::System.Data.DataColumn columnTypeId;
            
            private global::System.Data.DataColumn columnCategoryId;
            
            private global::System.Data.DataColumn columnInfo;
            
            private global::System.Data.DataColumn columnCreateIn;
            
            private global::System.Data.DataColumn columnModifyIn;
            
            private global::System.Data.DataColumn columnUserIn;
            
            private global::System.Data.DataColumn columnactive;
            
            private global::System.Data.DataColumn columnLocker;
            
            private global::System.Data.DataColumn columnTypeName;
            
            private global::System.Data.DataColumn columnTypeIconData;
            
            private global::System.Data.DataColumn columnOwnerId;
            
            private global::System.Data.DataColumn columnCanRead;
            
            private global::System.Data.DataColumn columnRealNameLastEdit;
            
            private global::System.Data.DataColumn columnRealNameOwner;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCanWrite;
            
            private global::System.Data.DataColumn columnCanInsert;
            
            private global::System.Data.DataColumn columnCanDelete;
            
            private global::System.Data.DataColumn columnAssociationId;
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnstu_code;
            
            private global::System.Data.DataColumn columnasase_code;
            
            private global::System.Data.DataColumn columnalsofof_code;
            
            private global::System.Data.DataColumn columnfasl_code;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnstu_name;
            
            private global::System.Data.DataColumn columnasase_year;
            
            private global::System.Data.DataColumn columnalsofof_name;
            
            private global::System.Data.DataColumn columnfasl_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsDataTable() {
                this.TableName = "QryItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QryItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicalNameColumn {
                get {
                    return this.columnPhysicalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeIdColumn {
                get {
                    return this.columnTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryIdColumn {
                get {
                    return this.columnCategoryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfoColumn {
                get {
                    return this.columnInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateInColumn {
                get {
                    return this.columnCreateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyInColumn {
                get {
                    return this.columnModifyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserInColumn {
                get {
                    return this.columnUserIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockerColumn {
                get {
                    return this.columnLocker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeIconDataColumn {
                get {
                    return this.columnTypeIconData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerIdColumn {
                get {
                    return this.columnOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanReadColumn {
                get {
                    return this.columnCanRead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameLastEditColumn {
                get {
                    return this.columnRealNameLastEdit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameOwnerColumn {
                get {
                    return this.columnRealNameOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanWriteColumn {
                get {
                    return this.columnCanWrite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanInsertColumn {
                get {
                    return this.columnCanInsert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanDeleteColumn {
                get {
                    return this.columnCanDelete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssociationIdColumn {
                get {
                    return this.columnAssociationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_codeColumn {
                get {
                    return this.columnstu_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_codeColumn {
                get {
                    return this.columnasase_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_codeColumn {
                get {
                    return this.columnalsofof_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_codeColumn {
                get {
                    return this.columnfasl_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_nameColumn {
                get {
                    return this.columnstu_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_yearColumn {
                get {
                    return this.columnasase_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_nameColumn {
                get {
                    return this.columnalsofof_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_nameColumn {
                get {
                    return this.columnfasl_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow this[int index] {
                get {
                    return ((QryItemsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryItemsRowChangeEventHandler QryItemsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryItemsRowChangeEventHandler QryItemsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryItemsRowChangeEventHandler QryItemsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryItemsRowChangeEventHandler QryItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQryItemsRow(QryItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow AddQryItemsRow(
                        int ItemId, 
                        string ItemName, 
                        string PhysicalName, 
                        int TypeId, 
                        QryCategoryRow parentQryCategoryRowByFK_Item_Category, 
                        string Info, 
                        System.DateTime CreateIn, 
                        System.DateTime ModifyIn, 
                        int UserIn, 
                        bool active, 
                        bool Locker, 
                        string TypeName, 
                        byte[] TypeIconData, 
                        int OwnerId, 
                        int CanRead, 
                        string RealNameLastEdit, 
                        string RealNameOwner, 
                        string CategoryName, 
                        int CanWrite, 
                        int CanInsert, 
                        int CanDelete, 
                        int AssociationId, 
                        int EmpCode, 
                        int stu_code, 
                        int asase_code, 
                        int alsofof_code, 
                        int fasl_code, 
                        string Name, 
                        string stu_name, 
                        string asase_year, 
                        string alsofof_name, 
                        string fasl_name) {
                QryItemsRow rowQryItemsRow = ((QryItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemId,
                        ItemName,
                        PhysicalName,
                        TypeId,
                        null,
                        Info,
                        CreateIn,
                        ModifyIn,
                        UserIn,
                        active,
                        Locker,
                        TypeName,
                        TypeIconData,
                        OwnerId,
                        CanRead,
                        RealNameLastEdit,
                        RealNameOwner,
                        CategoryName,
                        CanWrite,
                        CanInsert,
                        CanDelete,
                        AssociationId,
                        EmpCode,
                        stu_code,
                        asase_code,
                        alsofof_code,
                        fasl_code,
                        Name,
                        stu_name,
                        asase_year,
                        alsofof_name,
                        fasl_name};
                if ((parentQryCategoryRowByFK_Item_Category != null)) {
                    columnValuesArray[4] = parentQryCategoryRowByFK_Item_Category[0];
                }
                rowQryItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQryItemsRow);
                return rowQryItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow FindByItemId(int ItemId) {
                return ((QryItemsRow)(this.Rows.Find(new object[] {
                            ItemId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QryItemsDataTable cln = ((QryItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QryItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnPhysicalName = base.Columns["PhysicalName"];
                this.columnTypeId = base.Columns["TypeId"];
                this.columnCategoryId = base.Columns["CategoryId"];
                this.columnInfo = base.Columns["Info"];
                this.columnCreateIn = base.Columns["CreateIn"];
                this.columnModifyIn = base.Columns["ModifyIn"];
                this.columnUserIn = base.Columns["UserIn"];
                this.columnactive = base.Columns["active"];
                this.columnLocker = base.Columns["Locker"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnTypeIconData = base.Columns["TypeIconData"];
                this.columnOwnerId = base.Columns["OwnerId"];
                this.columnCanRead = base.Columns["CanRead"];
                this.columnRealNameLastEdit = base.Columns["RealNameLastEdit"];
                this.columnRealNameOwner = base.Columns["RealNameOwner"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCanWrite = base.Columns["CanWrite"];
                this.columnCanInsert = base.Columns["CanInsert"];
                this.columnCanDelete = base.Columns["CanDelete"];
                this.columnAssociationId = base.Columns["AssociationId"];
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnstu_code = base.Columns["stu_code"];
                this.columnasase_code = base.Columns["asase_code"];
                this.columnalsofof_code = base.Columns["alsofof_code"];
                this.columnfasl_code = base.Columns["fasl_code"];
                this.columnName = base.Columns["Name"];
                this.columnstu_name = base.Columns["stu_name"];
                this.columnasase_year = base.Columns["asase_year"];
                this.columnalsofof_name = base.Columns["alsofof_name"];
                this.columnfasl_name = base.Columns["fasl_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnPhysicalName = new global::System.Data.DataColumn("PhysicalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalName);
                this.columnTypeId = new global::System.Data.DataColumn("TypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeId);
                this.columnCategoryId = new global::System.Data.DataColumn("CategoryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryId);
                this.columnInfo = new global::System.Data.DataColumn("Info", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfo);
                this.columnCreateIn = new global::System.Data.DataColumn("CreateIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateIn);
                this.columnModifyIn = new global::System.Data.DataColumn("ModifyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyIn);
                this.columnUserIn = new global::System.Data.DataColumn("UserIn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIn);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnLocker = new global::System.Data.DataColumn("Locker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocker);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnTypeIconData = new global::System.Data.DataColumn("TypeIconData", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeIconData);
                this.columnOwnerId = new global::System.Data.DataColumn("OwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerId);
                this.columnCanRead = new global::System.Data.DataColumn("CanRead", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanRead);
                this.columnRealNameLastEdit = new global::System.Data.DataColumn("RealNameLastEdit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealNameLastEdit);
                this.columnRealNameOwner = new global::System.Data.DataColumn("RealNameOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealNameOwner);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCanWrite = new global::System.Data.DataColumn("CanWrite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanWrite);
                this.columnCanInsert = new global::System.Data.DataColumn("CanInsert", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanInsert);
                this.columnCanDelete = new global::System.Data.DataColumn("CanDelete", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanDelete);
                this.columnAssociationId = new global::System.Data.DataColumn("AssociationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationId);
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnstu_code = new global::System.Data.DataColumn("stu_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_code);
                this.columnasase_code = new global::System.Data.DataColumn("asase_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_code);
                this.columnalsofof_code = new global::System.Data.DataColumn("alsofof_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_code);
                this.columnfasl_code = new global::System.Data.DataColumn("fasl_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_code);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnstu_name = new global::System.Data.DataColumn("stu_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_name);
                this.columnasase_year = new global::System.Data.DataColumn("asase_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_year);
                this.columnalsofof_name = new global::System.Data.DataColumn("alsofof_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_name);
                this.columnfasl_name = new global::System.Data.DataColumn("fasl_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItemId}, true));
                this.columnItemId.AllowDBNull = false;
                this.columnItemId.Unique = true;
                this.columnItemName.MaxLength = 50;
                this.columnPhysicalName.MaxLength = 50;
                this.columnInfo.MaxLength = 255;
                this.columnTypeName.MaxLength = 50;
                this.columnCanRead.ReadOnly = true;
                this.columnRealNameLastEdit.ReadOnly = true;
                this.columnRealNameLastEdit.MaxLength = 50;
                this.columnRealNameOwner.ReadOnly = true;
                this.columnRealNameOwner.MaxLength = 50;
                this.columnCategoryName.ReadOnly = true;
                this.columnCategoryName.MaxLength = 50;
                this.columnCanWrite.ReadOnly = true;
                this.columnCanInsert.ReadOnly = true;
                this.columnCanDelete.ReadOnly = true;
                this.columnAssociationId.ReadOnly = true;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 100;
                this.columnstu_name.ReadOnly = true;
                this.columnstu_name.MaxLength = 50;
                this.columnasase_year.ReadOnly = true;
                this.columnasase_year.MaxLength = 50;
                this.columnalsofof_name.ReadOnly = true;
                this.columnalsofof_name.MaxLength = 50;
                this.columnfasl_name.ReadOnly = true;
                this.columnfasl_name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow NewQryItemsRow() {
                return ((QryItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QryItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QryItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QryItemsRowChanged != null)) {
                    this.QryItemsRowChanged(this, new QryItemsRowChangeEvent(((QryItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QryItemsRowChanging != null)) {
                    this.QryItemsRowChanging(this, new QryItemsRowChangeEvent(((QryItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QryItemsRowDeleted != null)) {
                    this.QryItemsRowDeleted(this, new QryItemsRowChangeEvent(((QryItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QryItemsRowDeleting != null)) {
                    this.QryItemsRowDeleting(this, new QryItemsRowChangeEvent(((QryItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQryItemsRow(QryItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QryItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QryCategoryDataTable : global::System.Data.TypedTableBase<QryCategoryRow> {
            
            private global::System.Data.DataColumn columnCategoryId;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCreateIn;
            
            private global::System.Data.DataColumn columnModifyIn;
            
            private global::System.Data.DataColumn columnUserIn;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnInfo;
            
            private global::System.Data.DataColumn columnactive;
            
            private global::System.Data.DataColumn columnCanRead;
            
            private global::System.Data.DataColumn columnRealNameLastEdit;
            
            private global::System.Data.DataColumn columnRealNameOwner;
            
            private global::System.Data.DataColumn columnCanWrite;
            
            private global::System.Data.DataColumn columnCanInsert;
            
            private global::System.Data.DataColumn columnCanDelete;
            
            private global::System.Data.DataColumn columnUserLevelId;
            
            private global::System.Data.DataColumn columnIconId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryDataTable() {
                this.TableName = "QryCategory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryCategoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QryCategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryIdColumn {
                get {
                    return this.columnCategoryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateInColumn {
                get {
                    return this.columnCreateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyInColumn {
                get {
                    return this.columnModifyIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserInColumn {
                get {
                    return this.columnUserIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfoColumn {
                get {
                    return this.columnInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanReadColumn {
                get {
                    return this.columnCanRead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameLastEditColumn {
                get {
                    return this.columnRealNameLastEdit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameOwnerColumn {
                get {
                    return this.columnRealNameOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanWriteColumn {
                get {
                    return this.columnCanWrite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanInsertColumn {
                get {
                    return this.columnCanInsert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanDeleteColumn {
                get {
                    return this.columnCanDelete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserLevelIdColumn {
                get {
                    return this.columnUserLevelId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IconIdColumn {
                get {
                    return this.columnIconId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow this[int index] {
                get {
                    return ((QryCategoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCategoryRowChangeEventHandler QryCategoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCategoryRowChangeEventHandler QryCategoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCategoryRowChangeEventHandler QryCategoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCategoryRowChangeEventHandler QryCategoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQryCategoryRow(QryCategoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow AddQryCategoryRow(
                        int CategoryId, 
                        string CategoryName, 
                        System.DateTime CreateIn, 
                        System.DateTime ModifyIn, 
                        int UserIn, 
                        int ParentID, 
                        string Info, 
                        bool active, 
                        int CanRead, 
                        string RealNameLastEdit, 
                        string RealNameOwner, 
                        int CanWrite, 
                        int CanInsert, 
                        int CanDelete, 
                        int UserLevelId, 
                        int IconId) {
                QryCategoryRow rowQryCategoryRow = ((QryCategoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CategoryId,
                        CategoryName,
                        CreateIn,
                        ModifyIn,
                        UserIn,
                        ParentID,
                        Info,
                        active,
                        CanRead,
                        RealNameLastEdit,
                        RealNameOwner,
                        CanWrite,
                        CanInsert,
                        CanDelete,
                        UserLevelId,
                        IconId};
                rowQryCategoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQryCategoryRow);
                return rowQryCategoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow FindByCategoryId(int CategoryId) {
                return ((QryCategoryRow)(this.Rows.Find(new object[] {
                            CategoryId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QryCategoryDataTable cln = ((QryCategoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QryCategoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCategoryId = base.Columns["CategoryId"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCreateIn = base.Columns["CreateIn"];
                this.columnModifyIn = base.Columns["ModifyIn"];
                this.columnUserIn = base.Columns["UserIn"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnInfo = base.Columns["Info"];
                this.columnactive = base.Columns["active"];
                this.columnCanRead = base.Columns["CanRead"];
                this.columnRealNameLastEdit = base.Columns["RealNameLastEdit"];
                this.columnRealNameOwner = base.Columns["RealNameOwner"];
                this.columnCanWrite = base.Columns["CanWrite"];
                this.columnCanInsert = base.Columns["CanInsert"];
                this.columnCanDelete = base.Columns["CanDelete"];
                this.columnUserLevelId = base.Columns["UserLevelId"];
                this.columnIconId = base.Columns["IconId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCategoryId = new global::System.Data.DataColumn("CategoryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryId);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCreateIn = new global::System.Data.DataColumn("CreateIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateIn);
                this.columnModifyIn = new global::System.Data.DataColumn("ModifyIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyIn);
                this.columnUserIn = new global::System.Data.DataColumn("UserIn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIn);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnInfo = new global::System.Data.DataColumn("Info", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfo);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnCanRead = new global::System.Data.DataColumn("CanRead", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanRead);
                this.columnRealNameLastEdit = new global::System.Data.DataColumn("RealNameLastEdit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealNameLastEdit);
                this.columnRealNameOwner = new global::System.Data.DataColumn("RealNameOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealNameOwner);
                this.columnCanWrite = new global::System.Data.DataColumn("CanWrite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanWrite);
                this.columnCanInsert = new global::System.Data.DataColumn("CanInsert", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanInsert);
                this.columnCanDelete = new global::System.Data.DataColumn("CanDelete", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanDelete);
                this.columnUserLevelId = new global::System.Data.DataColumn("UserLevelId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLevelId);
                this.columnIconId = new global::System.Data.DataColumn("IconId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIconId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCategoryId}, true));
                this.columnCategoryId.AllowDBNull = false;
                this.columnCategoryId.Unique = true;
                this.columnCategoryName.AllowDBNull = false;
                this.columnCategoryName.MaxLength = 50;
                this.columnInfo.MaxLength = 255;
                this.columnCanRead.ReadOnly = true;
                this.columnRealNameLastEdit.ReadOnly = true;
                this.columnRealNameLastEdit.MaxLength = 50;
                this.columnRealNameOwner.ReadOnly = true;
                this.columnRealNameOwner.MaxLength = 50;
                this.columnCanWrite.ReadOnly = true;
                this.columnCanInsert.ReadOnly = true;
                this.columnCanDelete.ReadOnly = true;
                this.columnUserLevelId.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow NewQryCategoryRow() {
                return ((QryCategoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QryCategoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QryCategoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QryCategoryRowChanged != null)) {
                    this.QryCategoryRowChanged(this, new QryCategoryRowChangeEvent(((QryCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QryCategoryRowChanging != null)) {
                    this.QryCategoryRowChanging(this, new QryCategoryRowChangeEvent(((QryCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QryCategoryRowDeleted != null)) {
                    this.QryCategoryRowDeleted(this, new QryCategoryRowChangeEvent(((QryCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QryCategoryRowDeleting != null)) {
                    this.QryCategoryRowDeleting(this, new QryCategoryRowChangeEvent(((QryCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQryCategoryRow(QryCategoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QryCategoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUERIESDataTable : global::System.Data.TypedTableBase<QUERIESRow> {
            
            private global::System.Data.DataColumn columnSERVERDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESDataTable() {
                this.TableName = "QUERIES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUERIESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QUERIESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVERDATETIMEColumn {
                get {
                    return this.columnSERVERDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESRow this[int index] {
                get {
                    return ((QUERIESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERIESRowChangeEventHandler QUERIESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERIESRowChangeEventHandler QUERIESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERIESRowChangeEventHandler QUERIESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERIESRowChangeEventHandler QUERIESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQUERIESRow(QUERIESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESRow AddQUERIESRow(System.DateTime SERVERDATETIME) {
                QUERIESRow rowQUERIESRow = ((QUERIESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SERVERDATETIME};
                rowQUERIESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQUERIESRow);
                return rowQUERIESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QUERIESDataTable cln = ((QUERIESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QUERIESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSERVERDATETIME = base.Columns["SERVERDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSERVERDATETIME = new global::System.Data.DataColumn("SERVERDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVERDATETIME);
                this.columnSERVERDATETIME.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESRow NewQUERIESRow() {
                return ((QUERIESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QUERIESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QUERIESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUERIESRowChanged != null)) {
                    this.QUERIESRowChanged(this, new QUERIESRowChangeEvent(((QUERIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUERIESRowChanging != null)) {
                    this.QUERIESRowChanging(this, new QUERIESRowChangeEvent(((QUERIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUERIESRowDeleted != null)) {
                    this.QUERIESRowDeleted(this, new QUERIESRowChangeEvent(((QUERIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUERIESRowDeleting != null)) {
                    this.QUERIESRowDeleting(this, new QUERIESRowChangeEvent(((QUERIESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQUERIESRow(QUERIESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUERIESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QryLogsDataTable : global::System.Data.TypedTableBase<QryLogsRow> {
            
            private global::System.Data.DataColumn columnLogDate;
            
            private global::System.Data.DataColumn columnLogIndex;
            
            private global::System.Data.DataColumn columnLogIndexExtra;
            
            private global::System.Data.DataColumn columnLogOpId;
            
            private global::System.Data.DataColumn columnLogTypeId;
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnOperationName;
            
            private global::System.Data.DataColumn columnLogTypeName;
            
            private global::System.Data.DataColumn columnRealName;
            
            private global::System.Data.DataColumn columnLogNameExtra;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsDataTable() {
                this.TableName = "QryLogs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryLogsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QryLogsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogDateColumn {
                get {
                    return this.columnLogDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogIndexColumn {
                get {
                    return this.columnLogIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogIndexExtraColumn {
                get {
                    return this.columnLogIndexExtra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogOpIdColumn {
                get {
                    return this.columnLogOpId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogTypeIdColumn {
                get {
                    return this.columnLogTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationNameColumn {
                get {
                    return this.columnOperationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogTypeNameColumn {
                get {
                    return this.columnLogTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameColumn {
                get {
                    return this.columnRealName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogNameExtraColumn {
                get {
                    return this.columnLogNameExtra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsRow this[int index] {
                get {
                    return ((QryLogsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryLogsRowChangeEventHandler QryLogsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryLogsRowChangeEventHandler QryLogsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryLogsRowChangeEventHandler QryLogsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryLogsRowChangeEventHandler QryLogsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQryLogsRow(QryLogsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsRow AddQryLogsRow(System.DateTime LogDate, int LogIndex, int LogIndexExtra, int LogOpId, int LogTypeId, int UserId, long id, string OperationName, string LogTypeName, string RealName, string LogNameExtra) {
                QryLogsRow rowQryLogsRow = ((QryLogsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LogDate,
                        LogIndex,
                        LogIndexExtra,
                        LogOpId,
                        LogTypeId,
                        UserId,
                        id,
                        OperationName,
                        LogTypeName,
                        RealName,
                        LogNameExtra};
                rowQryLogsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQryLogsRow);
                return rowQryLogsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QryLogsDataTable cln = ((QryLogsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QryLogsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLogDate = base.Columns["LogDate"];
                this.columnLogIndex = base.Columns["LogIndex"];
                this.columnLogIndexExtra = base.Columns["LogIndexExtra"];
                this.columnLogOpId = base.Columns["LogOpId"];
                this.columnLogTypeId = base.Columns["LogTypeId"];
                this.columnUserId = base.Columns["UserId"];
                this.columnid = base.Columns["id"];
                this.columnOperationName = base.Columns["OperationName"];
                this.columnLogTypeName = base.Columns["LogTypeName"];
                this.columnRealName = base.Columns["RealName"];
                this.columnLogNameExtra = base.Columns["LogNameExtra"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLogDate = new global::System.Data.DataColumn("LogDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogDate);
                this.columnLogIndex = new global::System.Data.DataColumn("LogIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogIndex);
                this.columnLogIndexExtra = new global::System.Data.DataColumn("LogIndexExtra", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogIndexExtra);
                this.columnLogOpId = new global::System.Data.DataColumn("LogOpId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogOpId);
                this.columnLogTypeId = new global::System.Data.DataColumn("LogTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogTypeId);
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnid = new global::System.Data.DataColumn("id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnOperationName = new global::System.Data.DataColumn("OperationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationName);
                this.columnLogTypeName = new global::System.Data.DataColumn("LogTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogTypeName);
                this.columnRealName = new global::System.Data.DataColumn("RealName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealName);
                this.columnLogNameExtra = new global::System.Data.DataColumn("LogNameExtra", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogNameExtra);
                this.columnLogDate.ReadOnly = true;
                this.columnLogIndex.ReadOnly = true;
                this.columnLogIndexExtra.ReadOnly = true;
                this.columnLogOpId.ReadOnly = true;
                this.columnLogTypeId.ReadOnly = true;
                this.columnUserId.ReadOnly = true;
                this.columnid.ReadOnly = true;
                this.columnOperationName.ReadOnly = true;
                this.columnOperationName.MaxLength = 50;
                this.columnLogTypeName.ReadOnly = true;
                this.columnLogTypeName.MaxLength = 50;
                this.columnRealName.ReadOnly = true;
                this.columnRealName.MaxLength = 50;
                this.columnLogNameExtra.ReadOnly = true;
                this.columnLogNameExtra.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsRow NewQryLogsRow() {
                return ((QryLogsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QryLogsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QryLogsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QryLogsRowChanged != null)) {
                    this.QryLogsRowChanged(this, new QryLogsRowChangeEvent(((QryLogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QryLogsRowChanging != null)) {
                    this.QryLogsRowChanging(this, new QryLogsRowChangeEvent(((QryLogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QryLogsRowDeleted != null)) {
                    this.QryLogsRowDeleted(this, new QryLogsRowChangeEvent(((QryLogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QryLogsRowDeleting != null)) {
                    this.QryLogsRowDeleting(this, new QryLogsRowChangeEvent(((QryLogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQryLogsRow(QryLogsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QryLogsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vStudentDataTable : global::System.Data.TypedTableBase<vStudentRow> {
            
            private global::System.Data.DataColumn columnstu_code;
            
            private global::System.Data.DataColumn columnstu_name;
            
            private global::System.Data.DataColumn columnasase_code;
            
            private global::System.Data.DataColumn columnalsofof_code;
            
            private global::System.Data.DataColumn columnfasl_code;
            
            private global::System.Data.DataColumn columnasase_year;
            
            private global::System.Data.DataColumn columnalsofof_name;
            
            private global::System.Data.DataColumn columnfasl_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentDataTable() {
                this.TableName = "vStudent";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vStudentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vStudentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_codeColumn {
                get {
                    return this.columnstu_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_nameColumn {
                get {
                    return this.columnstu_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_codeColumn {
                get {
                    return this.columnasase_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_codeColumn {
                get {
                    return this.columnalsofof_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_codeColumn {
                get {
                    return this.columnfasl_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_yearColumn {
                get {
                    return this.columnasase_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_nameColumn {
                get {
                    return this.columnalsofof_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_nameColumn {
                get {
                    return this.columnfasl_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentRow this[int index] {
                get {
                    return ((vStudentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vStudentRowChangeEventHandler vStudentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vStudentRowChangeEventHandler vStudentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vStudentRowChangeEventHandler vStudentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vStudentRowChangeEventHandler vStudentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvStudentRow(vStudentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentRow AddvStudentRow(int stu_code, string stu_name, int asase_code, int alsofof_code, int fasl_code, string asase_year, string alsofof_name, string fasl_name) {
                vStudentRow rowvStudentRow = ((vStudentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stu_code,
                        stu_name,
                        asase_code,
                        alsofof_code,
                        fasl_code,
                        asase_year,
                        alsofof_name,
                        fasl_name};
                rowvStudentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvStudentRow);
                return rowvStudentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vStudentDataTable cln = ((vStudentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vStudentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstu_code = base.Columns["stu_code"];
                this.columnstu_name = base.Columns["stu_name"];
                this.columnasase_code = base.Columns["asase_code"];
                this.columnalsofof_code = base.Columns["alsofof_code"];
                this.columnfasl_code = base.Columns["fasl_code"];
                this.columnasase_year = base.Columns["asase_year"];
                this.columnalsofof_name = base.Columns["alsofof_name"];
                this.columnfasl_name = base.Columns["fasl_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstu_code = new global::System.Data.DataColumn("stu_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_code);
                this.columnstu_name = new global::System.Data.DataColumn("stu_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_name);
                this.columnasase_code = new global::System.Data.DataColumn("asase_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_code);
                this.columnalsofof_code = new global::System.Data.DataColumn("alsofof_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_code);
                this.columnfasl_code = new global::System.Data.DataColumn("fasl_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_code);
                this.columnasase_year = new global::System.Data.DataColumn("asase_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_year);
                this.columnalsofof_name = new global::System.Data.DataColumn("alsofof_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_name);
                this.columnfasl_name = new global::System.Data.DataColumn("fasl_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_name);
                this.columnstu_code.AllowDBNull = false;
                this.columnstu_name.MaxLength = 50;
                this.columnasase_code.AllowDBNull = false;
                this.columnalsofof_code.AllowDBNull = false;
                this.columnfasl_code.AllowDBNull = false;
                this.columnasase_year.MaxLength = 50;
                this.columnalsofof_name.MaxLength = 50;
                this.columnfasl_name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentRow NewvStudentRow() {
                return ((vStudentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vStudentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vStudentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vStudentRowChanged != null)) {
                    this.vStudentRowChanged(this, new vStudentRowChangeEvent(((vStudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vStudentRowChanging != null)) {
                    this.vStudentRowChanging(this, new vStudentRowChangeEvent(((vStudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vStudentRowDeleted != null)) {
                    this.vStudentRowDeleted(this, new vStudentRowChangeEvent(((vStudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vStudentRowDeleting != null)) {
                    this.vStudentRowDeleting(this, new vStudentRowChangeEvent(((vStudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevStudentRow(vStudentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vStudentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class asaseDataTable : global::System.Data.TypedTableBase<asaseRow> {
            
            private global::System.Data.DataColumn columnasase_code;
            
            private global::System.Data.DataColumn columnasase_year;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseDataTable() {
                this.TableName = "asase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal asaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected asaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_codeColumn {
                get {
                    return this.columnasase_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asase_yearColumn {
                get {
                    return this.columnasase_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseRow this[int index] {
                get {
                    return ((asaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event asaseRowChangeEventHandler asaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event asaseRowChangeEventHandler asaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event asaseRowChangeEventHandler asaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event asaseRowChangeEventHandler asaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddasaseRow(asaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseRow AddasaseRow(int asase_code, string asase_year) {
                asaseRow rowasaseRow = ((asaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        asase_code,
                        asase_year};
                rowasaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowasaseRow);
                return rowasaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                asaseDataTable cln = ((asaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new asaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnasase_code = base.Columns["asase_code"];
                this.columnasase_year = base.Columns["asase_year"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnasase_code = new global::System.Data.DataColumn("asase_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_code);
                this.columnasase_year = new global::System.Data.DataColumn("asase_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasase_year);
                this.columnasase_code.AllowDBNull = false;
                this.columnasase_year.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseRow NewasaseRow() {
                return ((asaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new asaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(asaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.asaseRowChanged != null)) {
                    this.asaseRowChanged(this, new asaseRowChangeEvent(((asaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.asaseRowChanging != null)) {
                    this.asaseRowChanging(this, new asaseRowChangeEvent(((asaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.asaseRowDeleted != null)) {
                    this.asaseRowDeleted(this, new asaseRowChangeEvent(((asaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.asaseRowDeleting != null)) {
                    this.asaseRowDeleting(this, new asaseRowChangeEvent(((asaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveasaseRow(asaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "asaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class alsofofDataTable : global::System.Data.TypedTableBase<alsofofRow> {
            
            private global::System.Data.DataColumn columnalsofof_code;
            
            private global::System.Data.DataColumn columnalsofof_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofDataTable() {
                this.TableName = "alsofof";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal alsofofDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected alsofofDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_codeColumn {
                get {
                    return this.columnalsofof_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alsofof_nameColumn {
                get {
                    return this.columnalsofof_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofRow this[int index] {
                get {
                    return ((alsofofRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event alsofofRowChangeEventHandler alsofofRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event alsofofRowChangeEventHandler alsofofRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event alsofofRowChangeEventHandler alsofofRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event alsofofRowChangeEventHandler alsofofRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddalsofofRow(alsofofRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofRow AddalsofofRow(int alsofof_code, string alsofof_name) {
                alsofofRow rowalsofofRow = ((alsofofRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        alsofof_code,
                        alsofof_name};
                rowalsofofRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowalsofofRow);
                return rowalsofofRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                alsofofDataTable cln = ((alsofofDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new alsofofDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnalsofof_code = base.Columns["alsofof_code"];
                this.columnalsofof_name = base.Columns["alsofof_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnalsofof_code = new global::System.Data.DataColumn("alsofof_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_code);
                this.columnalsofof_name = new global::System.Data.DataColumn("alsofof_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalsofof_name);
                this.columnalsofof_code.AllowDBNull = false;
                this.columnalsofof_name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofRow NewalsofofRow() {
                return ((alsofofRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new alsofofRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(alsofofRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.alsofofRowChanged != null)) {
                    this.alsofofRowChanged(this, new alsofofRowChangeEvent(((alsofofRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.alsofofRowChanging != null)) {
                    this.alsofofRowChanging(this, new alsofofRowChangeEvent(((alsofofRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.alsofofRowDeleted != null)) {
                    this.alsofofRowDeleted(this, new alsofofRowChangeEvent(((alsofofRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.alsofofRowDeleting != null)) {
                    this.alsofofRowDeleting(this, new alsofofRowChangeEvent(((alsofofRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovealsofofRow(alsofofRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "alsofofDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class faslDataTable : global::System.Data.TypedTableBase<faslRow> {
            
            private global::System.Data.DataColumn columnfasl_code;
            
            private global::System.Data.DataColumn columnfasl_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslDataTable() {
                this.TableName = "fasl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal faslDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected faslDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_codeColumn {
                get {
                    return this.columnfasl_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fasl_nameColumn {
                get {
                    return this.columnfasl_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslRow this[int index] {
                get {
                    return ((faslRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event faslRowChangeEventHandler faslRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event faslRowChangeEventHandler faslRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event faslRowChangeEventHandler faslRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event faslRowChangeEventHandler faslRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfaslRow(faslRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslRow AddfaslRow(int fasl_code, string fasl_name) {
                faslRow rowfaslRow = ((faslRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fasl_code,
                        fasl_name};
                rowfaslRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfaslRow);
                return rowfaslRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                faslDataTable cln = ((faslDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new faslDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfasl_code = base.Columns["fasl_code"];
                this.columnfasl_name = base.Columns["fasl_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfasl_code = new global::System.Data.DataColumn("fasl_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_code);
                this.columnfasl_name = new global::System.Data.DataColumn("fasl_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfasl_name);
                this.columnfasl_code.AllowDBNull = false;
                this.columnfasl_name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslRow NewfaslRow() {
                return ((faslRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new faslRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(faslRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.faslRowChanged != null)) {
                    this.faslRowChanged(this, new faslRowChangeEvent(((faslRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.faslRowChanging != null)) {
                    this.faslRowChanging(this, new faslRowChangeEvent(((faslRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.faslRowDeleted != null)) {
                    this.faslRowDeleted(this, new faslRowChangeEvent(((faslRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.faslRowDeleting != null)) {
                    this.faslRowDeleting(this, new faslRowChangeEvent(((faslRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefaslRow(faslRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "faslDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmpDataTable : global::System.Data.TypedTableBase<EmpRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnTAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpDataTable() {
                this.TableName = "Emp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmpDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmpDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TATColumn {
                get {
                    return this.columnTAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRow this[int index] {
                get {
                    return ((EmpRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmpRowChangeEventHandler EmpRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmpRowChangeEventHandler EmpRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmpRowChangeEventHandler EmpRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmpRowChangeEventHandler EmpRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmpRow(EmpRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRow AddEmpRow(int Code, string Name, string TAT) {
                EmpRow rowEmpRow = ((EmpRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name,
                        TAT};
                rowEmpRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmpRow);
                return rowEmpRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRow FindByCode(int Code) {
                return ((EmpRow)(this.Rows.Find(new object[] {
                            Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmpDataTable cln = ((EmpDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmpDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
                this.columnTAT = base.Columns["TAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTAT = new global::System.Data.DataColumn("TAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode}, true));
                this.columnCode.AllowDBNull = false;
                this.columnCode.Unique = true;
                this.columnName.MaxLength = 100;
                this.columnTAT.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRow NewEmpRow() {
                return ((EmpRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmpRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmpRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmpRowChanged != null)) {
                    this.EmpRowChanged(this, new EmpRowChangeEvent(((EmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmpRowChanging != null)) {
                    this.EmpRowChanging(this, new EmpRowChangeEvent(((EmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmpRowDeleted != null)) {
                    this.EmpRowDeleted(this, new EmpRowChangeEvent(((EmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmpRowDeleting != null)) {
                    this.EmpRowDeleting(this, new EmpRowChangeEvent(((EmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmpRow(EmpRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmpDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentDataTable : global::System.Data.TypedTableBase<StudentRow> {
            
            private global::System.Data.DataColumn columnstu_code;
            
            private global::System.Data.DataColumn columnstu_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentDataTable() {
                this.TableName = "Student";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StudentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StudentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_codeColumn {
                get {
                    return this.columnstu_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stu_nameColumn {
                get {
                    return this.columnstu_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRow this[int index] {
                get {
                    return ((StudentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStudentRow(StudentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRow AddStudentRow(int stu_code, string stu_name) {
                StudentRow rowStudentRow = ((StudentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stu_code,
                        stu_name};
                rowStudentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentRow);
                return rowStudentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRow FindBystu_code(int stu_code) {
                return ((StudentRow)(this.Rows.Find(new object[] {
                            stu_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentDataTable cln = ((StudentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstu_code = base.Columns["stu_code"];
                this.columnstu_name = base.Columns["stu_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstu_code = new global::System.Data.DataColumn("stu_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_code);
                this.columnstu_name = new global::System.Data.DataColumn("stu_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstu_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstu_code}, true));
                this.columnstu_code.AllowDBNull = false;
                this.columnstu_code.Unique = true;
                this.columnstu_name.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRow NewStudentRow() {
                return ((StudentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentRowChanged != null)) {
                    this.StudentRowChanged(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentRowChanging != null)) {
                    this.StudentRowChanging(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentRowDeleted != null)) {
                    this.StudentRowDeleted(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentRowDeleting != null)) {
                    this.StudentRowDeleting(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStudentRow(StudentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsQueries ds = new dsQueries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QryItemsRow : global::System.Data.DataRow {
            
            private QryItemsDataTable tableQryItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQryItems = ((QryItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemId {
                get {
                    return ((int)(this[this.tableQryItems.ItemIdColumn]));
                }
                set {
                    this[this.tableQryItems.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicalName {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.PhysicalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalName\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.PhysicalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeId {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.TypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeId\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.TypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryId {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.CategoryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryId\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CategoryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Info {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.InfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Info\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.InfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQryItems.CreateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateIn\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CreateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQryItems.ModifyInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyIn\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.ModifyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserIn {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.UserInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserIn\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.UserInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool active {
                get {
                    try {
                        return ((bool)(this[this.tableQryItems.activeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'active\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Locker {
                get {
                    try {
                        return ((bool)(this[this.tableQryItems.LockerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Locker\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.LockerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeName {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.TypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeName\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.TypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] TypeIconData {
                get {
                    try {
                        return ((byte[])(this[this.tableQryItems.TypeIconDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeIconData\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.TypeIconDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OwnerId {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.OwnerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerId\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.OwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanRead {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.CanReadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanRead\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CanReadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealNameLastEdit {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.RealNameLastEditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealNameLastEdit\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.RealNameLastEditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealNameOwner {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.RealNameOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealNameOwner\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.RealNameOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanWrite {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.CanWriteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanWrite\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CanWriteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanInsert {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.CanInsertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanInsert\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CanInsertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanDelete {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.CanDeleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanDelete\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.CanDeleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssociationId {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.AssociationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationId\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.AssociationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmpCode {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stu_code {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.stu_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stu_code\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.stu_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int asase_code {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.asase_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asase_code\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.asase_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int alsofof_code {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.alsofof_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alsofof_code\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.alsofof_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fasl_code {
                get {
                    try {
                        return ((int)(this[this.tableQryItems.fasl_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fasl_code\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.fasl_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string stu_name {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.stu_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stu_name\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.stu_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asase_year {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.asase_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asase_year\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.asase_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string alsofof_name {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.alsofof_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alsofof_name\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.alsofof_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fasl_name {
                get {
                    try {
                        return ((string)(this[this.tableQryItems.fasl_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fasl_name\' in table \'QryItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryItems.fasl_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow QryCategoryRow {
                get {
                    return ((QryCategoryRow)(this.GetParentRow(this.Table.ParentRelations["FK_Item_Category"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Item_Category"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableQryItems.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNameNull() {
                this[this.tableQryItems.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicalNameNull() {
                return this.IsNull(this.tableQryItems.PhysicalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicalNameNull() {
                this[this.tableQryItems.PhysicalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeIdNull() {
                return this.IsNull(this.tableQryItems.TypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeIdNull() {
                this[this.tableQryItems.TypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryIdNull() {
                return this.IsNull(this.tableQryItems.CategoryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryIdNull() {
                this[this.tableQryItems.CategoryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfoNull() {
                return this.IsNull(this.tableQryItems.InfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfoNull() {
                this[this.tableQryItems.InfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateInNull() {
                return this.IsNull(this.tableQryItems.CreateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateInNull() {
                this[this.tableQryItems.CreateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifyInNull() {
                return this.IsNull(this.tableQryItems.ModifyInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifyInNull() {
                this[this.tableQryItems.ModifyInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserInNull() {
                return this.IsNull(this.tableQryItems.UserInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserInNull() {
                this[this.tableQryItems.UserInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactiveNull() {
                return this.IsNull(this.tableQryItems.activeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactiveNull() {
                this[this.tableQryItems.activeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockerNull() {
                return this.IsNull(this.tableQryItems.LockerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockerNull() {
                this[this.tableQryItems.LockerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNameNull() {
                return this.IsNull(this.tableQryItems.TypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNameNull() {
                this[this.tableQryItems.TypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeIconDataNull() {
                return this.IsNull(this.tableQryItems.TypeIconDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeIconDataNull() {
                this[this.tableQryItems.TypeIconDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwnerIdNull() {
                return this.IsNull(this.tableQryItems.OwnerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwnerIdNull() {
                this[this.tableQryItems.OwnerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanReadNull() {
                return this.IsNull(this.tableQryItems.CanReadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanReadNull() {
                this[this.tableQryItems.CanReadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealNameLastEditNull() {
                return this.IsNull(this.tableQryItems.RealNameLastEditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealNameLastEditNull() {
                this[this.tableQryItems.RealNameLastEditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealNameOwnerNull() {
                return this.IsNull(this.tableQryItems.RealNameOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealNameOwnerNull() {
                this[this.tableQryItems.RealNameOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tableQryItems.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryNameNull() {
                this[this.tableQryItems.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanWriteNull() {
                return this.IsNull(this.tableQryItems.CanWriteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanWriteNull() {
                this[this.tableQryItems.CanWriteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanInsertNull() {
                return this.IsNull(this.tableQryItems.CanInsertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanInsertNull() {
                this[this.tableQryItems.CanInsertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanDeleteNull() {
                return this.IsNull(this.tableQryItems.CanDeleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanDeleteNull() {
                this[this.tableQryItems.CanDeleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssociationIdNull() {
                return this.IsNull(this.tableQryItems.AssociationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssociationIdNull() {
                this[this.tableQryItems.AssociationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tableQryItems.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpCodeNull() {
                this[this.tableQryItems.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstu_codeNull() {
                return this.IsNull(this.tableQryItems.stu_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstu_codeNull() {
                this[this.tableQryItems.stu_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isasase_codeNull() {
                return this.IsNull(this.tableQryItems.asase_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setasase_codeNull() {
                this[this.tableQryItems.asase_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isalsofof_codeNull() {
                return this.IsNull(this.tableQryItems.alsofof_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setalsofof_codeNull() {
                this[this.tableQryItems.alsofof_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfasl_codeNull() {
                return this.IsNull(this.tableQryItems.fasl_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfasl_codeNull() {
                this[this.tableQryItems.fasl_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableQryItems.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableQryItems.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstu_nameNull() {
                return this.IsNull(this.tableQryItems.stu_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstu_nameNull() {
                this[this.tableQryItems.stu_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isasase_yearNull() {
                return this.IsNull(this.tableQryItems.asase_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setasase_yearNull() {
                this[this.tableQryItems.asase_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isalsofof_nameNull() {
                return this.IsNull(this.tableQryItems.alsofof_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setalsofof_nameNull() {
                this[this.tableQryItems.alsofof_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfasl_nameNull() {
                return this.IsNull(this.tableQryItems.fasl_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfasl_nameNull() {
                this[this.tableQryItems.fasl_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QryCategoryRow : global::System.Data.DataRow {
            
            private QryCategoryDataTable tableQryCategory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryCategoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQryCategory = ((QryCategoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryId {
                get {
                    return ((int)(this[this.tableQryCategory.CategoryIdColumn]));
                }
                set {
                    this[this.tableQryCategory.CategoryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CategoryName {
                get {
                    return ((string)(this[this.tableQryCategory.CategoryNameColumn]));
                }
                set {
                    this[this.tableQryCategory.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQryCategory.CreateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateIn\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.CreateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQryCategory.ModifyInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyIn\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.ModifyInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserIn {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.UserInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserIn\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.UserInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentID {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentID\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Info {
                get {
                    try {
                        return ((string)(this[this.tableQryCategory.InfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Info\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.InfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool active {
                get {
                    try {
                        return ((bool)(this[this.tableQryCategory.activeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'active\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanRead {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.CanReadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanRead\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.CanReadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealNameLastEdit {
                get {
                    try {
                        return ((string)(this[this.tableQryCategory.RealNameLastEditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealNameLastEdit\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.RealNameLastEditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealNameOwner {
                get {
                    try {
                        return ((string)(this[this.tableQryCategory.RealNameOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealNameOwner\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.RealNameOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanWrite {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.CanWriteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanWrite\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.CanWriteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanInsert {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.CanInsertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanInsert\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.CanInsertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CanDelete {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.CanDeleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanDelete\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.CanDeleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserLevelId {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.UserLevelIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserLevelId\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.UserLevelIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IconId {
                get {
                    try {
                        return ((int)(this[this.tableQryCategory.IconIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IconId\' in table \'QryCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCategory.IconIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateInNull() {
                return this.IsNull(this.tableQryCategory.CreateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateInNull() {
                this[this.tableQryCategory.CreateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifyInNull() {
                return this.IsNull(this.tableQryCategory.ModifyInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifyInNull() {
                this[this.tableQryCategory.ModifyInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserInNull() {
                return this.IsNull(this.tableQryCategory.UserInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserInNull() {
                this[this.tableQryCategory.UserInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableQryCategory.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIDNull() {
                this[this.tableQryCategory.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfoNull() {
                return this.IsNull(this.tableQryCategory.InfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfoNull() {
                this[this.tableQryCategory.InfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactiveNull() {
                return this.IsNull(this.tableQryCategory.activeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactiveNull() {
                this[this.tableQryCategory.activeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanReadNull() {
                return this.IsNull(this.tableQryCategory.CanReadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanReadNull() {
                this[this.tableQryCategory.CanReadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealNameLastEditNull() {
                return this.IsNull(this.tableQryCategory.RealNameLastEditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealNameLastEditNull() {
                this[this.tableQryCategory.RealNameLastEditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealNameOwnerNull() {
                return this.IsNull(this.tableQryCategory.RealNameOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealNameOwnerNull() {
                this[this.tableQryCategory.RealNameOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanWriteNull() {
                return this.IsNull(this.tableQryCategory.CanWriteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanWriteNull() {
                this[this.tableQryCategory.CanWriteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanInsertNull() {
                return this.IsNull(this.tableQryCategory.CanInsertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanInsertNull() {
                this[this.tableQryCategory.CanInsertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanDeleteNull() {
                return this.IsNull(this.tableQryCategory.CanDeleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCanDeleteNull() {
                this[this.tableQryCategory.CanDeleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserLevelIdNull() {
                return this.IsNull(this.tableQryCategory.UserLevelIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserLevelIdNull() {
                this[this.tableQryCategory.UserLevelIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIconIdNull() {
                return this.IsNull(this.tableQryCategory.IconIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIconIdNull() {
                this[this.tableQryCategory.IconIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow[] GetQryItemsRows() {
                if ((this.Table.ChildRelations["FK_Item_Category"] == null)) {
                    return new QryItemsRow[0];
                }
                else {
                    return ((QryItemsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Item_Category"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QUERIESRow : global::System.Data.DataRow {
            
            private QUERIESDataTable tableQUERIES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUERIESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUERIES = ((QUERIESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SERVERDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQUERIES.SERVERDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVERDATETIME\' in table \'QUERIES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUERIES.SERVERDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSERVERDATETIMENull() {
                return this.IsNull(this.tableQUERIES.SERVERDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSERVERDATETIMENull() {
                this[this.tableQUERIES.SERVERDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QryLogsRow : global::System.Data.DataRow {
            
            private QryLogsDataTable tableQryLogs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryLogsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQryLogs = ((QryLogsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LogDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQryLogs.LogDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogDate\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LogIndex {
                get {
                    try {
                        return ((int)(this[this.tableQryLogs.LogIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogIndex\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LogIndexExtra {
                get {
                    try {
                        return ((int)(this[this.tableQryLogs.LogIndexExtraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogIndexExtra\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogIndexExtraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LogOpId {
                get {
                    try {
                        return ((int)(this[this.tableQryLogs.LogOpIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogOpId\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogOpIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LogTypeId {
                get {
                    try {
                        return ((int)(this[this.tableQryLogs.LogTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogTypeId\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserId {
                get {
                    try {
                        return ((int)(this[this.tableQryLogs.UserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserId\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long id {
                get {
                    try {
                        return ((long)(this[this.tableQryLogs.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OperationName {
                get {
                    try {
                        return ((string)(this[this.tableQryLogs.OperationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OperationName\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.OperationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogTypeName {
                get {
                    try {
                        return ((string)(this[this.tableQryLogs.LogTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogTypeName\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealName {
                get {
                    try {
                        return ((string)(this[this.tableQryLogs.RealNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealName\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.RealNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LogNameExtra {
                get {
                    try {
                        return ((string)(this[this.tableQryLogs.LogNameExtraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogNameExtra\' in table \'QryLogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryLogs.LogNameExtraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogDateNull() {
                return this.IsNull(this.tableQryLogs.LogDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogDateNull() {
                this[this.tableQryLogs.LogDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogIndexNull() {
                return this.IsNull(this.tableQryLogs.LogIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogIndexNull() {
                this[this.tableQryLogs.LogIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogIndexExtraNull() {
                return this.IsNull(this.tableQryLogs.LogIndexExtraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogIndexExtraNull() {
                this[this.tableQryLogs.LogIndexExtraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogOpIdNull() {
                return this.IsNull(this.tableQryLogs.LogOpIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogOpIdNull() {
                this[this.tableQryLogs.LogOpIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogTypeIdNull() {
                return this.IsNull(this.tableQryLogs.LogTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogTypeIdNull() {
                this[this.tableQryLogs.LogTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserIdNull() {
                return this.IsNull(this.tableQryLogs.UserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserIdNull() {
                this[this.tableQryLogs.UserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidNull() {
                return this.IsNull(this.tableQryLogs.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNull() {
                this[this.tableQryLogs.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOperationNameNull() {
                return this.IsNull(this.tableQryLogs.OperationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOperationNameNull() {
                this[this.tableQryLogs.OperationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogTypeNameNull() {
                return this.IsNull(this.tableQryLogs.LogTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogTypeNameNull() {
                this[this.tableQryLogs.LogTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealNameNull() {
                return this.IsNull(this.tableQryLogs.RealNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealNameNull() {
                this[this.tableQryLogs.RealNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogNameExtraNull() {
                return this.IsNull(this.tableQryLogs.LogNameExtraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogNameExtraNull() {
                this[this.tableQryLogs.LogNameExtraColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vStudentRow : global::System.Data.DataRow {
            
            private vStudentDataTable tablevStudent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vStudentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevStudent = ((vStudentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stu_code {
                get {
                    return ((int)(this[this.tablevStudent.stu_codeColumn]));
                }
                set {
                    this[this.tablevStudent.stu_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string stu_name {
                get {
                    try {
                        return ((string)(this[this.tablevStudent.stu_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stu_name\' in table \'vStudent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevStudent.stu_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int asase_code {
                get {
                    return ((int)(this[this.tablevStudent.asase_codeColumn]));
                }
                set {
                    this[this.tablevStudent.asase_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int alsofof_code {
                get {
                    return ((int)(this[this.tablevStudent.alsofof_codeColumn]));
                }
                set {
                    this[this.tablevStudent.alsofof_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fasl_code {
                get {
                    return ((int)(this[this.tablevStudent.fasl_codeColumn]));
                }
                set {
                    this[this.tablevStudent.fasl_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asase_year {
                get {
                    try {
                        return ((string)(this[this.tablevStudent.asase_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asase_year\' in table \'vStudent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevStudent.asase_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string alsofof_name {
                get {
                    try {
                        return ((string)(this[this.tablevStudent.alsofof_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alsofof_name\' in table \'vStudent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevStudent.alsofof_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fasl_name {
                get {
                    try {
                        return ((string)(this[this.tablevStudent.fasl_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fasl_name\' in table \'vStudent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevStudent.fasl_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstu_nameNull() {
                return this.IsNull(this.tablevStudent.stu_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstu_nameNull() {
                this[this.tablevStudent.stu_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isasase_yearNull() {
                return this.IsNull(this.tablevStudent.asase_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setasase_yearNull() {
                this[this.tablevStudent.asase_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isalsofof_nameNull() {
                return this.IsNull(this.tablevStudent.alsofof_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setalsofof_nameNull() {
                this[this.tablevStudent.alsofof_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfasl_nameNull() {
                return this.IsNull(this.tablevStudent.fasl_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfasl_nameNull() {
                this[this.tablevStudent.fasl_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class asaseRow : global::System.Data.DataRow {
            
            private asaseDataTable tableasase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal asaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableasase = ((asaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int asase_code {
                get {
                    return ((int)(this[this.tableasase.asase_codeColumn]));
                }
                set {
                    this[this.tableasase.asase_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asase_year {
                get {
                    try {
                        return ((string)(this[this.tableasase.asase_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asase_year\' in table \'asase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableasase.asase_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isasase_yearNull() {
                return this.IsNull(this.tableasase.asase_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setasase_yearNull() {
                this[this.tableasase.asase_yearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class alsofofRow : global::System.Data.DataRow {
            
            private alsofofDataTable tablealsofof;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal alsofofRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablealsofof = ((alsofofDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int alsofof_code {
                get {
                    return ((int)(this[this.tablealsofof.alsofof_codeColumn]));
                }
                set {
                    this[this.tablealsofof.alsofof_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string alsofof_name {
                get {
                    try {
                        return ((string)(this[this.tablealsofof.alsofof_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alsofof_name\' in table \'alsofof\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablealsofof.alsofof_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isalsofof_nameNull() {
                return this.IsNull(this.tablealsofof.alsofof_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setalsofof_nameNull() {
                this[this.tablealsofof.alsofof_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class faslRow : global::System.Data.DataRow {
            
            private faslDataTable tablefasl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal faslRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefasl = ((faslDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fasl_code {
                get {
                    return ((int)(this[this.tablefasl.fasl_codeColumn]));
                }
                set {
                    this[this.tablefasl.fasl_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fasl_name {
                get {
                    try {
                        return ((string)(this[this.tablefasl.fasl_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fasl_name\' in table \'fasl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefasl.fasl_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfasl_nameNull() {
                return this.IsNull(this.tablefasl.fasl_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfasl_nameNull() {
                this[this.tablefasl.fasl_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmpRow : global::System.Data.DataRow {
            
            private EmpDataTable tableEmp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmpRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmp = ((EmpDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Code {
                get {
                    return ((int)(this[this.tableEmp.CodeColumn]));
                }
                set {
                    this[this.tableEmp.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableEmp.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Emp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmp.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TAT {
                get {
                    try {
                        return ((string)(this[this.tableEmp.TATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAT\' in table \'Emp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmp.TATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableEmp.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableEmp.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTATNull() {
                return this.IsNull(this.tableEmp.TATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTATNull() {
                this[this.tableEmp.TATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentRow : global::System.Data.DataRow {
            
            private StudentDataTable tableStudent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StudentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudent = ((StudentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stu_code {
                get {
                    return ((int)(this[this.tableStudent.stu_codeColumn]));
                }
                set {
                    this[this.tableStudent.stu_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string stu_name {
                get {
                    try {
                        return ((string)(this[this.tableStudent.stu_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stu_name\' in table \'Student\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStudent.stu_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstu_nameNull() {
                return this.IsNull(this.tableStudent.stu_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstu_nameNull() {
                this[this.tableStudent.stu_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QryItemsRowChangeEvent : global::System.EventArgs {
            
            private QryItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRowChangeEvent(QryItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QryCategoryRowChangeEvent : global::System.EventArgs {
            
            private QryCategoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRowChangeEvent(QryCategoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCategoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QUERIESRowChangeEvent : global::System.EventArgs {
            
            private QUERIESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESRowChangeEvent(QUERIESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERIESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QryLogsRowChangeEvent : global::System.EventArgs {
            
            private QryLogsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsRowChangeEvent(QryLogsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryLogsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vStudentRowChangeEvent : global::System.EventArgs {
            
            private vStudentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentRowChangeEvent(vStudentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vStudentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class asaseRowChangeEvent : global::System.EventArgs {
            
            private asaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseRowChangeEvent(asaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public asaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class alsofofRowChangeEvent : global::System.EventArgs {
            
            private alsofofRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofRowChangeEvent(alsofofRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public alsofofRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class faslRowChangeEvent : global::System.EventArgs {
            
            private faslRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslRowChangeEvent(faslRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public faslRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmpRowChangeEvent : global::System.EventArgs {
            
            private EmpRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRowChangeEvent(EmpRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmpRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StudentRowChangeEvent : global::System.EventArgs {
            
            private StudentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRowChangeEvent(StudentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StudentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DataCenter.DataSources.dsQueriesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QryItemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QryItemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QryItems";
            tableMapping.ColumnMappings.Add("ItemId", "ItemId");
            tableMapping.ColumnMappings.Add("ItemName", "ItemName");
            tableMapping.ColumnMappings.Add("PhysicalName", "PhysicalName");
            tableMapping.ColumnMappings.Add("TypeId", "TypeId");
            tableMapping.ColumnMappings.Add("CategoryId", "CategoryId");
            tableMapping.ColumnMappings.Add("Info", "Info");
            tableMapping.ColumnMappings.Add("CreateIn", "CreateIn");
            tableMapping.ColumnMappings.Add("ModifyIn", "ModifyIn");
            tableMapping.ColumnMappings.Add("UserIn", "UserIn");
            tableMapping.ColumnMappings.Add("active", "active");
            tableMapping.ColumnMappings.Add("Locker", "Locker");
            tableMapping.ColumnMappings.Add("TypeName", "TypeName");
            tableMapping.ColumnMappings.Add("TypeIconData", "TypeIconData");
            tableMapping.ColumnMappings.Add("OwnerId", "OwnerId");
            tableMapping.ColumnMappings.Add("CanRead", "CanRead");
            tableMapping.ColumnMappings.Add("RealNameLastEdit", "RealNameLastEdit");
            tableMapping.ColumnMappings.Add("RealNameOwner", "RealNameOwner");
            tableMapping.ColumnMappings.Add("CategoryName", "CategoryName");
            tableMapping.ColumnMappings.Add("CanWrite", "CanWrite");
            tableMapping.ColumnMappings.Add("CanInsert", "CanInsert");
            tableMapping.ColumnMappings.Add("CanDelete", "CanDelete");
            tableMapping.ColumnMappings.Add("AssociationId", "AssociationId");
            tableMapping.ColumnMappings.Add("EmpCode", "EmpCode");
            tableMapping.ColumnMappings.Add("stu_code", "stu_code");
            tableMapping.ColumnMappings.Add("asase_code", "asase_code");
            tableMapping.ColumnMappings.Add("alsofof_code", "alsofof_code");
            tableMapping.ColumnMappings.Add("fasl_code", "fasl_code");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("stu_name", "stu_name");
            tableMapping.ColumnMappings.Add("asase_year", "asase_year");
            tableMapping.ColumnMappings.Add("alsofof_name", "alsofof_name");
            tableMapping.ColumnMappings.Add("fasl_name", "fasl_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ItemId, ItemName, PhysicalName, TypeId, CategoryId, Info, CreateIn, OwnerI" +
                "d, ModifyIn, UserIn, active, Locker, EmpCode, stu_code, asase_code, alsofof_code" +
                ", fasl_code, 1 AS CanRead,\r\n(SELECT CategoryName FROM Category WHERE CategoryId " +
                "= Item.CategoryId) AS CategoryName,\r\n(SELECT TypeName FROM [Types] WHERE TypeId " +
                "= Item.TypeId) AS TypeName,\r\n(SELECT TypeIconData FROM [Types] WHERE TypeId = It" +
                "em.TypeId) AS TypeIconData,\r\n(SELECT AssociationId FROM [Types] WHERE TypeId = I" +
                "tem.TypeId) AS AssociationId,\r\n(SELECT RealName FROM Users WHERE UserID = Item.U" +
                "serIn) AS RealNameLastEdit,\r\n(SELECT RealName FROM Users WHERE UserID = Item.Own" +
                "erId) AS RealNameOwner,\r\n\r\n(SELECT Name FROM Emp WHERE Code = Item.EmpCode) AS N" +
                "ame,\r\n(SELECT stu_name FROM Student WHERE stu_code = Item.stu_code) AS stu_name," +
                "\r\n(SELECT asase_year FROM asase WHERE asase_code = Item.asase_code) AS asase_yea" +
                "r,\r\n(SELECT alsofof_name FROM alsofof WHERE alsofof_code = Item.alsofof_code) AS" +
                " alsofof_name,\r\n(SELECT fasl_name FROM fasl WHERE fasl_code = Item.fasl_code) AS" +
                " fasl_name,\r\n\r\nISNULL((SELECT TOP 1 1 AS CanWrite WHERE \r\n(\r\nEXISTS(SELECT Categ" +
                "oryId FROM CategoryRole AS T1 WHERE GrantId = 1 AND CategoryId = Item.CategoryId" +
                " AND CanWrite = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleI" +
                "d AND UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELECT CategoryId FROM Cate" +
                "goryUser WHERE GrantId = 1 AND CategoryId = Item.CategoryId AND CanWrite = 1 AND" +
                " UserId = @UserId)\r\nOR\r\nEXISTS(SELECT ItemId FROM ItemRole AS T1 WHERE GrantId =" +
                " 1 AND ItemId = Item.ItemId AND CanWrite = 1 AND EXISTS(SELECT RoleId FROM UserR" +
                "ole WHERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(" +
                "SELECT ItemId FROM ItemUser WHERE GrantId = 1 AND ItemId = Item.ItemId AND CanWr" +
                "ite = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM Categor" +
                "yRole WHERE GrantId = 2 AND  CategoryId = Item.CategoryId AND CanWrite = 1 AND E" +
                "XISTS(SELECT RoleId FROM UserRole WHERE RoleId = CategoryRole.RoleId AND  UserId" +
                " = @UserId AND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryUse" +
                "r WHERE GrantId = 2 AND  CategoryId = Item.CategoryId AND CanWrite = 1 AND UserI" +
                "d = @UserId)\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM ItemRole AS T1 WHERE GrantId = " +
                "2 AND  ItemId = Item.ItemId AND CanWrite = 1 AND EXISTS(SELECT RoleId FROM UserR" +
                "ole WHERE RoleId = T1.RoleId AND  UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT E" +
                "XISTS(SELECT ItemId FROM ItemUser WHERE GrantId = 2 AND  ItemId = Item.ItemId AN" +
                "D CanWrite = 1 AND UserId = @UserId)\r\n), 0) AS CanWrite,\r\n\r\nISNULL((SELECT TOP 1" +
                " 1 AS CanInsert WHERE \r\n(\r\nEXISTS(SELECT CategoryId FROM CategoryRole AS T1 WHER" +
                "E GrantId = 1 AND CategoryId = Item.CategoryId AND CanInsert = 1 AND EXISTS(SELE" +
                "CT RoleId FROM UserRole WHERE RoleId = T1.RoleId AND UserId = @UserId AND GrantI" +
                "d = 1))\r\nOR\r\nEXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 1 AND Ca" +
                "tegoryId = Item.CategoryId AND CanInsert = 1 AND UserId = @UserId)\r\nOR\r\nEXISTS(S" +
                "ELECT ItemId FROM ItemRole AS T1 WHERE GrantId = 1 AND ItemId = Item.ItemId AND " +
                "CanInsert = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleId AN" +
                "D UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELECT ItemId FROM ItemUser WHE" +
                "RE GrantId = 1 AND ItemId = Item.ItemId AND CanInsert = 1 AND UserId = @UserId)\r" +
                "\n)\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryRole WHERE GrantId = 2 AND  C" +
                "ategoryId = Item.CategoryId AND CanInsert = 1 AND EXISTS(SELECT RoleId FROM User" +
                "Role WHERE RoleId = CategoryRole.RoleId AND  UserId = @UserId AND GrantId = 2))\r" +
                "\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 2 AND  Cate" +
                "goryId = Item.CategoryId AND CanInsert = 1 AND UserId = @UserId)\r\nAND\r\nNOT EXIST" +
                "S(SELECT ItemId FROM ItemRole AS T1 WHERE GrantId = 2 AND  ItemId = Item.ItemId " +
                "AND CanInsert = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleI" +
                "d AND  UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM It" +
                "emUser WHERE GrantId = 2 AND  ItemId = Item.ItemId AND CanInsert = 1 AND UserId " +
                "= @UserId)\r\n), 0) AS CanInsert,\r\n\r\nISNULL((SELECT TOP 1 1 AS CanDelete WHERE \r\n(" +
                "\r\nEXISTS(SELECT CategoryId FROM CategoryRole AS T1 WHERE GrantId = 1 AND Categor" +
                "yId = Item.CategoryId AND CanDelete = 1 AND EXISTS(SELECT RoleId FROM UserRole W" +
                "HERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELEC" +
                "T CategoryId FROM CategoryUser WHERE GrantId = 1 AND CategoryId = Item.CategoryI" +
                "d AND CanDelete = 1 AND UserId = @UserId)\r\nOR\r\nEXISTS(SELECT ItemId FROM ItemRol" +
                "e AS T1 WHERE GrantId = 1 AND ItemId = Item.ItemId AND CanDelete = 1 AND EXISTS(" +
                "SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleId AND UserId = @UserId AND Gr" +
                "antId = 1))\r\nOR\r\nEXISTS(SELECT ItemId FROM ItemUser WHERE GrantId = 1 AND ItemId" +
                " = Item.ItemId AND CanDelete = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELEC" +
                "T CategoryId FROM CategoryRole WHERE GrantId = 2 AND  CategoryId = Item.Category" +
                "Id AND CanDelete = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = Categ" +
                "oryRole.RoleId AND  UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT C" +
                "ategoryId FROM CategoryUser WHERE GrantId = 2 AND  CategoryId = Item.CategoryId " +
                "AND CanDelete = 1 AND UserId = @UserId)\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM Item" +
                "Role AS T1 WHERE GrantId = 2 AND  ItemId = Item.ItemId AND CanDelete = 1 AND EXI" +
                "STS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleId AND  UserId = @UserId A" +
                "ND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM ItemUser WHERE GrantId = 2 " +
                "AND  ItemId = Item.ItemId AND CanDelete = 1 AND UserId = @UserId)\r\n), 0) AS CanD" +
                "elete\r\n\r\nFROM Item\r\nWHERE active = 1 AND\r\n(\r\nEXISTS(SELECT CategoryId FROM Categ" +
                "oryRole WHERE GrantId = 1 AND CategoryId = Item.CategoryId AND CanRead = 1 AND E" +
                "XISTS(SELECT RoleId FROM UserRole WHERE UserId = @UserId AND GrantId = 1))\r\nOR\r\n" +
                "EXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 1 AND CategoryId = It" +
                "em.CategoryId AND CanRead = 1 AND UserId = @UserId)\r\nOR\r\nEXISTS(SELECT ItemId FR" +
                "OM ItemRole WHERE GrantId = 1 AND ItemId = Item.ItemId AND CanRead = 1 AND EXIST" +
                "S(SELECT RoleId FROM UserRole WHERE UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXIS" +
                "TS(SELECT ItemId FROM ItemUser WHERE GrantId = 1 AND ItemId = Item.ItemId AND Ca" +
                "nRead = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM Categ" +
                "oryRole WHERE GrantId = 2 AND  CategoryId = Item.CategoryId AND CanRead = 1 AND " +
                "EXISTS(SELECT RoleId FROM UserRole WHERE UserId = @UserId AND GrantId = 2))\r\nAND" +
                "\r\nNOT EXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 2 AND  Category" +
                "Id = Item.CategoryId AND CanRead = 1 AND UserId = @UserId)\r\nAND\r\nNOT EXISTS(SELE" +
                "CT ItemId FROM ItemRole WHERE GrantId = 2 AND  ItemId = Item.ItemId AND CanRead " +
                "= 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE UserId = @UserId AND GrantId = " +
                "2))\r\nAND\r\nNOT EXISTS(SELECT ItemId FROM ItemUser WHERE GrantId = 2 AND  ItemId =" +
                " Item.ItemId AND CanRead = 1 AND UserId = @UserId)\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        (SELECT        AssociationId\r\n                           FROM      " +
                "      Types AS Types_1\r\n                           WHERE        (TypeId = Item.T" +
                "ypeId)) AS AssociationId, ISNULL\r\n                             ((SELECT        T" +
                "OP (1) 1 AS CanDelete\r\n                                 WHERE        EXISTS\r\n   " +
                "                                                            (SELECT        Categ" +
                "oryId\r\n                                                                  FROM   " +
                "         CategoryRole AS T1\r\n                                                   " +
                "               WHERE        (GrantId = 1) AND (CategoryId = Item.CategoryId) AND" +
                " (CanDelete = 1) AND EXISTS\r\n                                                   " +
                "                                            (SELECT        RoleId\r\n             " +
                "                                                                                " +
                "     FROM            UserRole AS UserRole_20\r\n                                  " +
                "                                                                WHERE        (Ro" +
                "leId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 1))) AND (NOT EXISTS\r" +
                "\n                                                               (SELECT        C" +
                "ategoryId\r\n                                                                  FRO" +
                "M            CategoryRole AS CategoryRole_9\r\n                                   " +
                "                               WHERE        (GrantId = 2) AND (CategoryId = Item" +
                ".CategoryId) AND (CanDelete = 1) AND EXISTS\r\n                                   " +
                "                                                            (SELECT        RoleI" +
                "d\r\n                                                                             " +
                "                     FROM            UserRole AS UserRole_19\r\n                  " +
                "                                                                                " +
                "WHERE        (RoleId = CategoryRole_9.RoleID) AND (UserId = @UserId) AND (Catego" +
                "ryRole_9.GrantId = 2)))) AND (NOT EXISTS\r\n                                      " +
                "                         (SELECT        CategoryId\r\n                            " +
                "                                      FROM            CategoryUser AS CategoryUs" +
                "er_10\r\n                                                                  WHERE  " +
                "      (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanDelete = 1) AND (" +
                "UserID = @UserId))) AND (NOT EXISTS\r\n                                           " +
                "                    (SELECT        ItemId\r\n                                     " +
                "                             FROM            ItemRole AS T1\r\n                   " +
                "                                               WHERE        (GrantId = 2) AND (I" +
                "temId = Item.ItemId) AND (CanDelete = 1) AND EXISTS\r\n                           " +
                "                                                                    (SELECT     " +
                "   RoleId\r\n                                                                     " +
                "                             FROM            UserRole AS UserRole_15\r\n          " +
                "                                                                                " +
                "        WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId" +
                " = 2)))) AND (NOT EXISTS\r\n                                                      " +
                "         (SELECT        ItemId\r\n                                                " +
                "                  FROM            ItemUser AS ItemUser_10\r\n                     " +
                "                                             WHERE        (GrantId = 2) AND (Ite" +
                "mId = Item.ItemId) AND (CanDelete = 1) AND (UserID = @UserId))) OR\r\n            " +
                "                                               (NOT EXISTS\r\n                    " +
                "                                           (SELECT        CategoryId\r\n          " +
                "                                                        FROM            Category" +
                "Role AS CategoryRole_8\r\n                                                        " +
                "          WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (Can" +
                "Delete = 1) AND EXISTS\r\n                                                        " +
                "                                       (SELECT        RoleId\r\n                  " +
                "                                                                                " +
                "FROM            UserRole AS UserRole_18\r\n                                       " +
                "                                                           WHERE        (RoleId " +
                "= CategoryRole_8.RoleID) AND (UserId = @UserId) AND (CategoryRole_8.GrantId = 2)" +
                "))) AND (NOT EXISTS\r\n                                                           " +
                "    (SELECT        CategoryId\r\n                                                 " +
                "                 FROM            CategoryUser AS CategoryUser_9\r\n               " +
                "                                                   WHERE        (GrantId = 2) AN" +
                "D (CategoryId = Item.CategoryId) AND (CanDelete = 1) AND (UserID = @UserId))) AN" +
                "D (NOT EXISTS\r\n                                                               (S" +
                "ELECT        ItemId\r\n                                                           " +
                "       FROM            ItemRole AS T1\r\n                                         " +
                "                         WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) A" +
                "ND (CanDelete = 1) AND EXISTS\r\n                                                 " +
                "                                              (SELECT        RoleId\r\n           " +
                "                                                                                " +
                "       FROM            UserRole AS UserRole_14\r\n                                " +
                "                                                                  WHERE        (" +
                "RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 2)))) AND (NOT EXIS" +
                "TS\r\n                                                               (SELECT      " +
                "  ItemId\r\n                                                                  FROM" +
                "            ItemUser AS ItemUser_9\r\n                                            " +
                "                      WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND " +
                "(CanDelete = 1) AND (UserID = @UserId))) AND EXISTS\r\n                           " +
                "                                    (SELECT        CategoryId\r\n                 " +
                "                                                 FROM            CategoryUser AS" +
                " CategoryUser_6\r\n                                                               " +
                "   WHERE        (GrantId = 1) AND (CategoryId = Item.CategoryId) AND (CanDelete " +
                "= 1) AND (UserID = @UserId)) OR\r\n                                               " +
                "            (NOT EXISTS\r\n                                                       " +
                "        (SELECT        CategoryId\r\n                                             " +
                "                     FROM            CategoryRole AS CategoryRole_7\r\n           " +
                "                                                       WHERE        (GrantId = 2" +
                ") AND (CategoryId = Item.CategoryId) AND (CanDelete = 1) AND EXISTS\r\n           " +
                "                                                                                " +
                "    (SELECT        RoleId\r\n                                                     " +
                "                                             FROM            UserRole AS UserRol" +
                "e_17\r\n                                                                          " +
                "                        WHERE        (RoleId = CategoryRole_7.RoleID) AND (UserI" +
                "d = @UserId) AND (CategoryRole_7.GrantId = 2)))) AND (NOT EXISTS\r\n              " +
                "                                                 (SELECT        CategoryId\r\n    " +
                "                                                              FROM            Ca" +
                "tegoryUser AS CategoryUser_8\r\n                                                  " +
                "                WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AN" +
                "D (CanDelete = 1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n                    " +
                "                                           (SELECT        ItemId\r\n              " +
                "                                                    FROM            ItemRole AS " +
                "T1\r\n                                                                  WHERE     " +
                "   (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanDelete = 1) AND EXISTS\r\n    " +
                "                                                                                " +
                "           (SELECT        RoleId\r\n                                              " +
                "                                                    FROM            UserRole AS " +
                "UserRole_13\r\n                                                                   " +
                "                               WHERE        (RoleId = T1.RoleID) AND (UserId = @" +
                "UserId) AND (T1.GrantId = 2)))) AND (NOT EXISTS\r\n                               " +
                "                                (SELECT        ItemId\r\n                         " +
                "                                         FROM            ItemUser AS ItemUser_8\r" +
                "\n                                                                  WHERE        " +
                "(GrantId = 2) AND (ItemId = Item.ItemId) AND (CanDelete = 1) AND (UserID = @User" +
                "Id))) AND EXISTS\r\n                                                              " +
                " (SELECT        ItemId\r\n                                                        " +
                "          FROM            ItemRole AS T1\r\n                                      " +
                "                            WHERE        (GrantId = 1) AND (ItemId = Item.ItemId" +
                ") AND (CanDelete = 1) AND EXISTS\r\n                                              " +
                "                                                 (SELECT        RoleId\r\n        " +
                "                                                                                " +
                "          FROM            UserRole AS UserRole_11\r\n                             " +
                "                                                                     WHERE      " +
                "  (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 1))) OR\r\n       " +
                "                                                    (NOT EXISTS\r\n               " +
                "                                                (SELECT        CategoryId\r\n     " +
                "                                                             FROM            Cat" +
                "egoryRole AS CategoryRole_6\r\n                                                   " +
                "               WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND" +
                " (CanDelete = 1) AND EXISTS\r\n                                                   " +
                "                                            (SELECT        RoleId\r\n             " +
                "                                                                                " +
                "     FROM            UserRole AS UserRole_16\r\n                                  " +
                "                                                                WHERE        (Ro" +
                "leId = CategoryRole_6.RoleID) AND (UserId = @UserId) AND (CategoryRole_6.GrantId" +
                " = 2)))) AND (NOT EXISTS\r\n                                                      " +
                "         (SELECT        CategoryId\r\n                                            " +
                "                      FROM            CategoryUser AS CategoryUser_7\r\n          " +
                "                                                        WHERE        (GrantId = " +
                "2) AND (CategoryId = Item.CategoryId) AND (CanDelete = 1) AND (UserID = @UserId)" +
                ")) AND (NOT EXISTS\r\n                                                            " +
                "   (SELECT        ItemId\r\n                                                      " +
                "            FROM            ItemRole AS T1\r\n                                    " +
                "                              WHERE        (GrantId = 2) AND (ItemId = Item.Item" +
                "Id) AND (CanDelete = 1) AND EXISTS\r\n                                            " +
                "                                                   (SELECT        RoleId\r\n      " +
                "                                                                                " +
                "            FROM            UserRole AS UserRole_12\r\n                           " +
                "                                                                       WHERE    " +
                "    (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 2)))) AND (NOT" +
                " EXISTS\r\n                                                               (SELECT " +
                "       ItemId\r\n                                                                 " +
                " FROM            ItemUser AS ItemUser_7\r\n                                       " +
                "                           WHERE        (GrantId = 2) AND (ItemId = Item.ItemId)" +
                " AND (CanDelete = 1) AND (UserID = @UserId))) AND EXISTS\r\n                      " +
                "                                         (SELECT        ItemId\r\n                " +
                "                                                  FROM            ItemUser AS It" +
                "emUser_6\r\n                                                                  WHER" +
                "E        (GrantId = 1) AND (ItemId = Item.ItemId) AND (CanDelete = 1) AND (UserI" +
                "D = @UserId))), 0) AS CanDelete, ISNULL\r\n                             ((SELECT  " +
                "      TOP (1) 1 AS CanInsert\r\n                                 WHERE        EXIS" +
                "TS\r\n                                                               (SELECT      " +
                "  CategoryId\r\n                                                                  " +
                "FROM            CategoryRole AS T1\r\n                                            " +
                "                      WHERE        (GrantId = 1) AND (CategoryId = Item.Category" +
                "Id) AND (CanInsert = 1) AND EXISTS\r\n                                            " +
                "                                                   (SELECT        RoleId\r\n      " +
                "                                                                                " +
                "            FROM            UserRole AS UserRole_30\r\n                           " +
                "                                                                       WHERE    " +
                "    (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 1))) AND (NOT " +
                "EXISTS\r\n                                                               (SELECT  " +
                "      CategoryId\r\n                                                              " +
                "    FROM            CategoryRole AS CategoryRole_13\r\n                           " +
                "                                       WHERE        (GrantId = 2) AND (CategoryI" +
                "d = Item.CategoryId) AND (CanInsert = 1) AND EXISTS\r\n                           " +
                "                                                                    (SELECT     " +
                "   RoleId\r\n                                                                     " +
                "                             FROM            UserRole AS UserRole_29\r\n          " +
                "                                                                                " +
                "        WHERE        (RoleId = CategoryRole_13.RoleID) AND (UserId = @UserId) AN" +
                "D (CategoryRole_13.GrantId = 2)))) AND (NOT EXISTS\r\n                            " +
                "                                   (SELECT        CategoryId\r\n                  " +
                "                                                FROM            CategoryUser AS " +
                "CategoryUser_15\r\n                                                               " +
                "   WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanInsert " +
                "= 1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n                                 " +
                "                              (SELECT        ItemId\r\n                           " +
                "                                       FROM            ItemRole AS T1\r\n         " +
                "                                                         WHERE        (GrantId =" +
                " 2) AND (ItemId = Item.ItemId) AND (CanInsert = 1) AND EXISTS\r\n                 " +
                "                                                                              (S" +
                "ELECT        RoleId\r\n                                                           " +
                "                                       FROM            UserRole AS UserRole_25\r\n" +
                "                                                                                " +
                "                  WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (" +
                "T1.GrantId = 2)))) AND (NOT EXISTS\r\n                                            " +
                "                   (SELECT        ItemId\r\n                                      " +
                "                            FROM            ItemUser AS ItemUser_15\r\n           " +
                "                                                       WHERE        (GrantId = 2" +
                ") AND (ItemId = Item.ItemId) AND (CanInsert = 1) AND (UserID = @UserId))) OR\r\n  " +
                "                                                         (NOT EXISTS\r\n          " +
                "                                                     (SELECT        CategoryId\r\n" +
                "                                                                  FROM          " +
                "  CategoryRole AS CategoryRole_12\r\n                                             " +
                "                     WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryI" +
                "d) AND (CanInsert = 1) AND EXISTS\r\n                                             " +
                "                                                  (SELECT        RoleId\r\n       " +
                "                                                                                " +
                "           FROM            UserRole AS UserRole_28\r\n                            " +
                "                                                                      WHERE     " +
                "   (RoleId = CategoryRole_12.RoleID) AND (UserId = @UserId) AND (CategoryRole_12" +
                ".GrantId = 2)))) AND (NOT EXISTS\r\n                                              " +
                "                 (SELECT        CategoryId\r\n                                    " +
                "                              FROM            CategoryUser AS CategoryUser_14\r\n " +
                "                                                                 WHERE        (G" +
                "rantId = 2) AND (CategoryId = Item.CategoryId) AND (CanInsert = 1) AND (UserID =" +
                " @UserId))) AND (NOT EXISTS\r\n                                                   " +
                "            (SELECT        ItemId\r\n                                             " +
                "                     FROM            ItemRole AS T1\r\n                           " +
                "                                       WHERE        (GrantId = 2) AND (ItemId = " +
                "Item.ItemId) AND (CanInsert = 1) AND EXISTS\r\n                                   " +
                "                                                            (SELECT        RoleI" +
                "d\r\n                                                                             " +
                "                     FROM            UserRole AS UserRole_24\r\n                  " +
                "                                                                                " +
                "WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 2))))" +
                " AND (NOT EXISTS\r\n                                                              " +
                " (SELECT        ItemId\r\n                                                        " +
                "          FROM            ItemUser AS ItemUser_14\r\n                             " +
                "                                     WHERE        (GrantId = 2) AND (ItemId = It" +
                "em.ItemId) AND (CanInsert = 1) AND (UserID = @UserId))) AND EXISTS\r\n            " +
                "                                                   (SELECT        CategoryId\r\n  " +
                "                                                                FROM            " +
                "CategoryUser AS CategoryUser_11\r\n                                               " +
                "                   WHERE        (GrantId = 1) AND (CategoryId = Item.CategoryId)" +
                " AND (CanInsert = 1) AND (UserID = @UserId)) OR\r\n                               " +
                "                            (NOT EXISTS\r\n                                       " +
                "                        (SELECT        CategoryId\r\n                             " +
                "                                     FROM            CategoryRole AS CategoryRol" +
                "e_11\r\n                                                                  WHERE   " +
                "     (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanInsert = 1) AND EX" +
                "ISTS\r\n                                                                          " +
                "                     (SELECT        RoleId\r\n                                    " +
                "                                                              FROM            Us" +
                "erRole AS UserRole_27\r\n                                                         " +
                "                                         WHERE        (RoleId = CategoryRole_11." +
                "RoleID) AND (UserId = @UserId) AND (CategoryRole_11.GrantId = 2)))) AND (NOT EXI" +
                "STS\r\n                                                               (SELECT     " +
                "   CategoryId\r\n                                                                 " +
                " FROM            CategoryUser AS CategoryUser_13\r\n                              " +
                "                                    WHERE        (GrantId = 2) AND (CategoryId =" +
                " Item.CategoryId) AND (CanInsert = 1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n" +
                "                                                               (SELECT        It" +
                "emId\r\n                                                                  FROM    " +
                "        ItemRole AS T1\r\n                                                        " +
                "          WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanInsert =" +
                " 1) AND EXISTS\r\n                                                                " +
                "                               (SELECT        RoleId\r\n                          " +
                "                                                                        FROM    " +
                "        UserRole AS UserRole_23\r\n                                               " +
                "                                                   WHERE        (RoleId = T1.Rol" +
                "eID) AND (UserId = @UserId) AND (T1.GrantId = 2)))) AND (NOT EXISTS\r\n           " +
                "                                                    (SELECT        ItemId\r\n     " +
                "                                                             FROM            Ite" +
                "mUser AS ItemUser_13\r\n                                                          " +
                "        WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanInsert = 1" +
                ") AND (UserID = @UserId))) AND EXISTS\r\n                                         " +
                "                      (SELECT        ItemId\r\n                                   " +
                "                               FROM            ItemRole AS T1\r\n                 " +
                "                                                 WHERE        (GrantId = 1) AND " +
                "(ItemId = Item.ItemId) AND (CanInsert = 1) AND EXISTS\r\n                         " +
                "                                                                      (SELECT   " +
                "     RoleId\r\n                                                                   " +
                "                               FROM            UserRole AS UserRole_21\r\n        " +
                "                                                                                " +
                "          WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.Grant" +
                "Id = 1))) OR\r\n                                                           (NOT EX" +
                "ISTS\r\n                                                               (SELECT    " +
                "    CategoryId\r\n                                                                " +
                "  FROM            CategoryRole AS CategoryRole_10\r\n                             " +
                "                                     WHERE        (GrantId = 2) AND (CategoryId " +
                "= Item.CategoryId) AND (CanInsert = 1) AND EXISTS\r\n                             " +
                "                                                                  (SELECT       " +
                " RoleId\r\n                                                                       " +
                "                           FROM            UserRole AS UserRole_26\r\n            " +
                "                                                                                " +
                "      WHERE        (RoleId = CategoryRole_10.RoleID) AND (UserId = @UserId) AND " +
                "(CategoryRole_10.GrantId = 2)))) AND (NOT EXISTS\r\n                              " +
                "                                 (SELECT        CategoryId\r\n                    " +
                "                                              FROM            CategoryUser AS Ca" +
                "tegoryUser_12\r\n                                                                 " +
                " WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanInsert = " +
                "1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n                                   " +
                "                            (SELECT        ItemId\r\n                             " +
                "                                     FROM            ItemRole AS T1\r\n           " +
                "                                                       WHERE        (GrantId = 2" +
                ") AND (ItemId = Item.ItemId) AND (CanInsert = 1) AND EXISTS\r\n                   " +
                "                                                                            (SEL" +
                "ECT        RoleId\r\n                                                             " +
                "                                     FROM            UserRole AS UserRole_22\r\n  " +
                "                                                                                " +
                "                WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1" +
                ".GrantId = 2)))) AND (NOT EXISTS\r\n                                              " +
                "                 (SELECT        ItemId\r\n                                        " +
                "                          FROM            ItemUser AS ItemUser_12\r\n             " +
                "                                                     WHERE        (GrantId = 2) " +
                "AND (ItemId = Item.ItemId) AND (CanInsert = 1) AND (UserID = @UserId))) AND EXIS" +
                "TS\r\n                                                               (SELECT      " +
                "  ItemId\r\n                                                                  FROM" +
                "            ItemUser AS ItemUser_11\r\n                                           " +
                "                       WHERE        (GrantId = 1) AND (ItemId = Item.ItemId) AND" +
                " (CanInsert = 1) AND (UserID = @UserId))), 0) AS CanInsert, 1 AS CanRead, ISNULL" +
                "\r\n                             ((SELECT        TOP (1) 1 AS CanWrite\r\n          " +
                "                       WHERE        EXISTS\r\n                                    " +
                "                           (SELECT        CategoryId\r\n                          " +
                "                                        FROM            CategoryRole AS T1\r\n    " +
                "                                                              WHERE        (Gran" +
                "tId = 1) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND EXISTS\r\n     " +
                "                                                                                " +
                "          (SELECT        RoleId\r\n                                               " +
                "                                                   FROM            UserRole\r\n   " +
                "                                                                                " +
                "               WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1." +
                "GrantId = 1))) AND (NOT EXISTS\r\n                                                " +
                "               (SELECT        CategoryId\r\n                                      " +
                "                            FROM            CategoryRole\r\n                      " +
                "                                            WHERE        (GrantId = 2) AND (Cate" +
                "goryId = Item.CategoryId) AND (CanWrite = 1) AND EXISTS\r\n                       " +
                "                                                                        (SELECT " +
                "       RoleId\r\n                                                                 " +
                "                                 FROM            UserRole AS UserRole_39\r\n      " +
                "                                                                                " +
                "            WHERE        (RoleId = CategoryRole.RoleID) AND (UserId = @UserId) A" +
                "ND (CategoryRole.GrantId = 2)))) AND (NOT EXISTS\r\n                              " +
                "                                 (SELECT        CategoryId\r\n                    " +
                "                                              FROM            CategoryUser\r\n    " +
                "                                                              WHERE        (Gran" +
                "tId = 2) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND (UserID = @Us" +
                "erId))) AND (NOT EXISTS\r\n                                                       " +
                "        (SELECT        ItemId\r\n                                                 " +
                "                 FROM            ItemRole AS T1\r\n                               " +
                "                                   WHERE        (GrantId = 2) AND (ItemId = Item" +
                ".ItemId) AND (CanWrite = 1) AND EXISTS\r\n                                        " +
                "                                                       (SELECT        RoleId\r\n  " +
                "                                                                                " +
                "                FROM            UserRole AS UserRole_35\r\n                       " +
                "                                                                           WHERE" +
                "        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 2)))) AND " +
                "(NOT EXISTS\r\n                                                               (SEL" +
                "ECT        ItemId\r\n                                                             " +
                "     FROM            ItemUser\r\n                                                 " +
                "                 WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanW" +
                "rite = 1) AND (UserID = @UserId))) OR\r\n                                         " +
                "                  (NOT EXISTS\r\n                                                 " +
                "              (SELECT        CategoryId\r\n                                       " +
                "                           FROM            CategoryRole AS CategoryRole_16\r\n    " +
                "                                                              WHERE        (Gran" +
                "tId = 2) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND EXISTS\r\n     " +
                "                                                                                " +
                "          (SELECT        RoleId\r\n                                               " +
                "                                                   FROM            UserRole AS U" +
                "serRole_38\r\n                                                                    " +
                "                              WHERE        (RoleId = CategoryRole_16.RoleID) AND" +
                " (UserId = @UserId) AND (CategoryRole_16.GrantId = 2)))) AND (NOT EXISTS\r\n      " +
                "                                                         (SELECT        Category" +
                "Id\r\n                                                                  FROM      " +
                "      CategoryUser AS CategoryUser_19\r\n                                         " +
                "                         WHERE        (GrantId = 2) AND (CategoryId = Item.Categ" +
                "oryId) AND (CanWrite = 1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n            " +
                "                                                   (SELECT        ItemId\r\n      " +
                "                                                            FROM            Item" +
                "Role AS T1\r\n                                                                  WH" +
                "ERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanWrite = 1) AND EXIST" +
                "S\r\n                                                                             " +
                "                  (SELECT        RoleId\r\n                                       " +
                "                                                           FROM            UserR" +
                "ole AS UserRole_34\r\n                                                            " +
                "                                      WHERE        (RoleId = T1.RoleID) AND (Use" +
                "rId = @UserId) AND (T1.GrantId = 2)))) AND (NOT EXISTS\r\n                        " +
                "                                       (SELECT        ItemId\r\n                  " +
                "                                                FROM            ItemUser AS Item" +
                "User_19\r\n                                                                  WHERE" +
                "        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanWrite = 1) AND (UserID " +
                "= @UserId))) AND EXISTS\r\n                                                       " +
                "        (SELECT        CategoryId\r\n                                             " +
                "                     FROM            CategoryUser AS CategoryUser_16\r\n          " +
                "                                                        WHERE        (GrantId = " +
                "1) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND (UserID = @UserId))" +
                " OR\r\n                                                           (NOT EXISTS\r\n   " +
                "                                                            (SELECT        Categ" +
                "oryId\r\n                                                                  FROM   " +
                "         CategoryRole AS CategoryRole_15\r\n                                      " +
                "                            WHERE        (GrantId = 2) AND (CategoryId = Item.Ca" +
                "tegoryId) AND (CanWrite = 1) AND EXISTS\r\n                                       " +
                "                                                        (SELECT        RoleId\r\n " +
                "                                                                                " +
                "                 FROM            UserRole AS UserRole_37\r\n                      " +
                "                                                                            WHER" +
                "E        (RoleId = CategoryRole_15.RoleID) AND (UserId = @UserId) AND (CategoryR" +
                "ole_15.GrantId = 2)))) AND (NOT EXISTS\r\n                                        " +
                "                       (SELECT        CategoryId\r\n                              " +
                "                                    FROM            CategoryUser AS CategoryUser" +
                "_18\r\n                                                                  WHERE    " +
                "    (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND (Use" +
                "rID = @UserId))) AND (NOT EXISTS\r\n                                              " +
                "                 (SELECT        ItemId\r\n                                        " +
                "                          FROM            ItemRole AS T1\r\n                      " +
                "                                            WHERE        (GrantId = 2) AND (Item" +
                "Id = Item.ItemId) AND (CanWrite = 1) AND EXISTS\r\n                               " +
                "                                                                (SELECT        R" +
                "oleId\r\n                                                                         " +
                "                         FROM            UserRole AS UserRole_33\r\n              " +
                "                                                                                " +
                "    WHERE        (RoleId = T1.RoleID) AND (UserId = @UserId) AND (T1.GrantId = 2" +
                ")))) AND (NOT EXISTS\r\n                                                          " +
                "     (SELECT        ItemId\r\n                                                    " +
                "              FROM            ItemUser AS ItemUser_18\r\n                         " +
                "                                         WHERE        (GrantId = 2) AND (ItemId " +
                "= Item.ItemId) AND (CanWrite = 1) AND (UserID = @UserId))) AND EXISTS\r\n         " +
                "                                                      (SELECT        ItemId\r\n   " +
                "                                                               FROM            I" +
                "temRole AS T1\r\n                                                                 " +
                " WHERE        (GrantId = 1) AND (ItemId = Item.ItemId) AND (CanWrite = 1) AND EX" +
                "ISTS\r\n                                                                          " +
                "                     (SELECT        RoleId\r\n                                    " +
                "                                                              FROM            Us" +
                "erRole AS UserRole_31\r\n                                                         " +
                "                                         WHERE        (RoleId = T1.RoleID) AND (" +
                "UserId = @UserId) AND (T1.GrantId = 1))) OR\r\n                                   " +
                "                        (NOT EXISTS\r\n                                           " +
                "                    (SELECT        CategoryId\r\n                                 " +
                "                                 FROM            CategoryRole AS CategoryRole_14" +
                "\r\n                                                                  WHERE       " +
                " (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanWrite = 1) AND EXISTS\r" +
                "\n                                                                               " +
                "                (SELECT        RoleId\r\n                                         " +
                "                                                         FROM            UserRol" +
                "e AS UserRole_36\r\n                                                              " +
                "                                    WHERE        (RoleId = CategoryRole_14.RoleI" +
                "D) AND (UserId = @UserId) AND (CategoryRole_14.GrantId = 2)))) AND (NOT EXISTS\r\n" +
                "                                                               (SELECT        Ca" +
                "tegoryId\r\n                                                                  FROM" +
                "            CategoryUser AS CategoryUser_17\r\n                                   " +
                "                               WHERE        (GrantId = 2) AND (CategoryId = Item" +
                ".CategoryId) AND (CanWrite = 1) AND (UserID = @UserId))) AND (NOT EXISTS\r\n      " +
                "                                                         (SELECT        ItemId\r\n" +
                "                                                                  FROM          " +
                "  ItemRole AS T1\r\n                                                              " +
                "    WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanWrite = 1) AND" +
                " EXISTS\r\n                                                                       " +
                "                        (SELECT        RoleId\r\n                                 " +
                "                                                                 FROM           " +
                " UserRole AS UserRole_32\r\n                                                      " +
                "                                            WHERE        (RoleId = T1.RoleID) AN" +
                "D (UserId = @UserId) AND (T1.GrantId = 2)))) AND (NOT EXISTS\r\n                  " +
                "                                             (SELECT        ItemId\r\n            " +
                "                                                      FROM            ItemUser A" +
                "S ItemUser_17\r\n                                                                 " +
                " WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanWrite = 1) AND (U" +
                "serID = @UserId))) AND EXISTS\r\n                                                 " +
                "              (SELECT        ItemId\r\n                                           " +
                "                       FROM            ItemUser AS ItemUser_16\r\n                " +
                "                                                  WHERE        (GrantId = 1) AND" +
                " (ItemId = Item.ItemId) AND (CanWrite = 1) AND (UserID = @UserId))), 0) AS CanWr" +
                "ite, CategoryId,\r\n                             (SELECT        CategoryName\r\n    " +
                "                            FROM            Category\r\n                          " +
                "      WHERE        (CategoryId = Item.CategoryId)) AS CategoryName, CreateIn, Em" +
                "pCode, Info, ItemId, ItemName, Locker, ModifyIn, OwnerId, PhysicalName,\r\n       " +
                "                      (SELECT        RealName\r\n                                F" +
                "ROM            Users\r\n                                WHERE        (UserID = Ite" +
                "m.UserIn)) AS RealNameLastEdit,\r\n                             (SELECT        Rea" +
                "lName\r\n                                FROM            Users AS Users_1\r\n       " +
                "                         WHERE        (UserID = Item.OwnerId)) AS RealNameOwner," +
                "\r\n                             (SELECT        TypeIconData\r\n                    " +
                "            FROM            Types AS Types_2\r\n                                WH" +
                "ERE        (TypeId = Item.TypeId)) AS TypeIconData, TypeId,\r\n                   " +
                "          (SELECT        TypeName\r\n                                FROM         " +
                "   Types\r\n                                WHERE        (TypeId = Item.TypeId)) A" +
                "S TypeName, UserIn, active, alsofof_code, asase_code, fasl_code, stu_code,\r\n    " +
                "                         (SELECT        Name\r\n                                FR" +
                "OM            Emp\r\n                                WHERE        (Code = Item.Emp" +
                "Code)) AS Name,\r\n                             (SELECT        stu_name\r\n         " +
                "                       FROM            Student\r\n                                " +
                "WHERE        (stu_code = Item.stu_code)) AS stu_name,\r\n                         " +
                "    (SELECT        asase_year\r\n                                FROM            a" +
                "sase\r\n                                WHERE        (asase_code = Item.asase_code" +
                ")) AS asase_year,\r\n                             (SELECT        alsofof_name\r\n   " +
                "                             FROM            alsofof\r\n                          " +
                "      WHERE        (alsofof_code = Item.alsofof_code)) AS alsofof_name,\r\n       " +
                "                      (SELECT        fasl_name\r\n                                " +
                "FROM            fasl\r\n                                WHERE        (fasl_code = " +
                "Item.fasl_code)) AS fasl_name\r\nFROM            Item\r\nWHERE        (CategoryId = " +
                "@CategoryId) AND (active = 1) AND EXISTS\r\n                             (SELECT  " +
                "      CategoryId\r\n                                FROM            CategoryRole A" +
                "S CategoryRole_5\r\n                                WHERE        (GrantId = 1) AND" +
                " (CategoryId = Item.CategoryId) AND (CanRead = 1) AND EXISTS\r\n                  " +
                "                                           (SELECT        RoleId\r\n              " +
                "                                                  FROM            UserRole AS Us" +
                "erRole_10\r\n                                                                WHERE" +
                "        (UserId = @UserId) AND (CategoryRole_5.GrantId = 1))) AND (NOT EXISTS\r\n " +
                "                            (SELECT        CategoryId\r\n                         " +
                "       FROM            CategoryRole AS CategoryRole_4\r\n                         " +
                "       WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanRea" +
                "d = 1) AND EXISTS\r\n                                                             " +
                "(SELECT        RoleId\r\n                                                         " +
                "       FROM            UserRole AS UserRole_9\r\n                                 " +
                "                               WHERE        (UserId = @UserId) AND (CategoryRole" +
                "_4.GrantId = 2)))) AND (NOT EXISTS\r\n                             (SELECT        " +
                "CategoryId\r\n                                FROM            CategoryUser AS Cate" +
                "goryUser_5\r\n                                WHERE        (GrantId = 2) AND (Cate" +
                "goryId = Item.CategoryId) AND (CanRead = 1) AND (UserID = @UserId))) AND (NOT EX" +
                "ISTS\r\n                             (SELECT        ItemId\r\n                      " +
                "          FROM            ItemRole\r\n                                WHERE       " +
                " (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanRead = 1) AND EXISTS\r\n        " +
                "                                                     (SELECT        RoleId\r\n    " +
                "                                                            FROM            User" +
                "Role AS UserRole_5\r\n                                                            " +
                "    WHERE        (UserId = @UserId) AND (ItemRole.GrantId = 2)))) AND (NOT EXIST" +
                "S\r\n                             (SELECT        ItemId\r\n                         " +
                "       FROM            ItemUser AS ItemUser_5\r\n                                W" +
                "HERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanRead = 1) AND (User" +
                "ID = @UserId))) OR\r\n                         (CategoryId = @CategoryId) AND (act" +
                "ive = 1) AND (NOT EXISTS\r\n                             (SELECT        CategoryId" +
                "\r\n                                FROM            CategoryRole AS CategoryRole_3" +
                "\r\n                                WHERE        (GrantId = 2) AND (CategoryId = I" +
                "tem.CategoryId) AND (CanRead = 1) AND EXISTS\r\n                                  " +
                "                           (SELECT        RoleId\r\n                              " +
                "                                  FROM            UserRole AS UserRole_8\r\n      " +
                "                                                          WHERE        (UserId =" +
                " @UserId) AND (CategoryRole_3.GrantId = 2)))) AND (NOT EXISTS\r\n                 " +
                "            (SELECT        CategoryId\r\n                                FROM     " +
                "       CategoryUser AS CategoryUser_4\r\n                                WHERE    " +
                "    (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanRead = 1) AND (User" +
                "ID = @UserId))) AND (NOT EXISTS\r\n                             (SELECT        Ite" +
                "mId\r\n                                FROM            ItemRole AS ItemRole_4\r\n   " +
                "                             WHERE        (GrantId = 2) AND (ItemId = Item.ItemI" +
                "d) AND (CanRead = 1) AND EXISTS\r\n                                               " +
                "              (SELECT        RoleId\r\n                                           " +
                "                     FROM            UserRole AS UserRole_4\r\n                   " +
                "                                             WHERE        (UserId = @UserId) AND" +
                " (ItemRole_4.GrantId = 2)))) AND (NOT EXISTS\r\n                             (SELE" +
                "CT        ItemId\r\n                                FROM            ItemUser AS It" +
                "emUser_4\r\n                                WHERE        (GrantId = 2) AND (ItemId" +
                " = Item.ItemId) AND (CanRead = 1) AND (UserID = @UserId))) AND EXISTS\r\n         " +
                "                    (SELECT        CategoryId\r\n                                F" +
                "ROM            CategoryUser AS CategoryUser_1\r\n                                W" +
                "HERE        (GrantId = 1) AND (CategoryId = Item.CategoryId) AND (CanRead = 1) A" +
                "ND (UserID = @UserId)) OR\r\n                         (CategoryId = @CategoryId) A" +
                "ND (active = 1) AND (NOT EXISTS\r\n                             (SELECT        Cat" +
                "egoryId\r\n                                FROM            CategoryRole AS Categor" +
                "yRole_2\r\n                                WHERE        (GrantId = 2) AND (Categor" +
                "yId = Item.CategoryId) AND (CanRead = 1) AND EXISTS\r\n                           " +
                "                                  (SELECT        RoleId\r\n                       " +
                "                                         FROM            UserRole AS UserRole_7\r" +
                "\n                                                                WHERE        (U" +
                "serId = @UserId) AND (CategoryRole_2.GrantId = 2)))) AND (NOT EXISTS\r\n          " +
                "                   (SELECT        CategoryId\r\n                                FR" +
                "OM            CategoryUser AS CategoryUser_3\r\n                                WH" +
                "ERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (CanRead = 1) AN" +
                "D (UserID = @UserId))) AND (NOT EXISTS\r\n                             (SELECT    " +
                "    ItemId\r\n                                FROM            ItemRole AS ItemRole" +
                "_3\r\n                                WHERE        (GrantId = 2) AND (ItemId = Ite" +
                "m.ItemId) AND (CanRead = 1) AND EXISTS\r\n                                        " +
                "                     (SELECT        RoleId\r\n                                    " +
                "                            FROM            UserRole AS UserRole_3\r\n            " +
                "                                                    WHERE        (UserId = @User" +
                "Id) AND (ItemRole_3.GrantId = 2)))) AND (NOT EXISTS\r\n                           " +
                "  (SELECT        ItemId\r\n                                FROM            ItemUse" +
                "r AS ItemUser_3\r\n                                WHERE        (GrantId = 2) AND " +
                "(ItemId = Item.ItemId) AND (CanRead = 1) AND (UserID = @UserId))) AND EXISTS\r\n  " +
                "                           (SELECT        ItemId\r\n                              " +
                "  FROM            ItemRole AS ItemRole_1\r\n                                WHERE " +
                "       (GrantId = 1) AND (ItemId = Item.ItemId) AND (CanRead = 1) AND EXISTS\r\n  " +
                "                                                           (SELECT        RoleId" +
                "\r\n                                                                FROM          " +
                "  UserRole AS UserRole_1\r\n                                                      " +
                "          WHERE        (UserId = @UserId) AND (ItemRole_1.GrantId = 1))) OR\r\n   " +
                "                      (CategoryId = @CategoryId) AND (active = 1) AND (NOT EXIST" +
                "S\r\n                             (SELECT        CategoryId\r\n                     " +
                "           FROM            CategoryRole AS CategoryRole_1\r\n                     " +
                "           WHERE        (GrantId = 2) AND (CategoryId = Item.CategoryId) AND (Ca" +
                "nRead = 1) AND EXISTS\r\n                                                         " +
                "    (SELECT        RoleId\r\n                                                     " +
                "           FROM            UserRole AS UserRole_6\r\n                             " +
                "                                   WHERE        (UserId = @UserId) AND (Category" +
                "Role_1.GrantId = 2)))) AND (NOT EXISTS\r\n                             (SELECT    " +
                "    CategoryId\r\n                                FROM            CategoryUser AS " +
                "CategoryUser_2\r\n                                WHERE        (GrantId = 2) AND (" +
                "CategoryId = Item.CategoryId) AND (CanRead = 1) AND (UserID = @UserId))) AND (NO" +
                "T EXISTS\r\n                             (SELECT        ItemId\r\n                  " +
                "              FROM            ItemRole AS ItemRole_2\r\n                          " +
                "      WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (CanRead = 1) AN" +
                "D EXISTS\r\n                                                             (SELECT  " +
                "      RoleId\r\n                                                                FR" +
                "OM            UserRole AS UserRole_2\r\n                                          " +
                "                      WHERE        (UserId = @UserId) AND (ItemRole_2.GrantId = " +
                "2)))) AND (NOT EXISTS\r\n                             (SELECT        ItemId\r\n     " +
                "                           FROM            ItemUser AS ItemUser_2\r\n             " +
                "                   WHERE        (GrantId = 2) AND (ItemId = Item.ItemId) AND (Ca" +
                "nRead = 1) AND (UserID = @UserId))) AND EXISTS\r\n                             (SE" +
                "LECT        ItemId\r\n                                FROM            ItemUser AS " +
                "ItemUser_1\r\n                                WHERE        (GrantId = 1) AND (Item" +
                "Id = Item.ItemId) AND (CanRead = 1) AND (UserID = @UserId))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CategoryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByUserId(dsQueries.QryItemsDataTable dataTable, int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(UserId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.QryItemsDataTable GetDataByUserId(int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(UserId));
            dsQueries.QryItemsDataTable dataTable = new dsQueries.QryItemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCategoryId_UserId(dsQueries.QryItemsDataTable dataTable, global::System.Nullable<int> CategoryId, int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CategoryId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CategoryId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UserId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsQueries.QryItemsDataTable GetDataByCategoryId_UserId(global::System.Nullable<int> CategoryId, int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CategoryId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CategoryId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UserId));
            dsQueries.QryItemsDataTable dataTable = new dsQueries.QryItemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QryCategoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QryCategoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QryCategory";
            tableMapping.ColumnMappings.Add("CategoryId", "CategoryId");
            tableMapping.ColumnMappings.Add("CategoryName", "CategoryName");
            tableMapping.ColumnMappings.Add("CreateIn", "CreateIn");
            tableMapping.ColumnMappings.Add("ModifyIn", "ModifyIn");
            tableMapping.ColumnMappings.Add("UserIn", "UserIn");
            tableMapping.ColumnMappings.Add("ParentID", "ParentID");
            tableMapping.ColumnMappings.Add("Info", "Info");
            tableMapping.ColumnMappings.Add("active", "active");
            tableMapping.ColumnMappings.Add("CanRead", "CanRead");
            tableMapping.ColumnMappings.Add("RealNameLastEdit", "RealNameLastEdit");
            tableMapping.ColumnMappings.Add("RealNameOwner", "RealNameOwner");
            tableMapping.ColumnMappings.Add("CanWrite", "CanWrite");
            tableMapping.ColumnMappings.Add("CanInsert", "CanInsert");
            tableMapping.ColumnMappings.Add("CanDelete", "CanDelete");
            tableMapping.ColumnMappings.Add("UserLevelId", "UserLevelId");
            tableMapping.ColumnMappings.Add("IconId", "IconId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CategoryId, CategoryName, CreateIn, ModifyIn, UserIn, ParentID, Info, Icon" +
                "Id, active, 1 AS CanRead,\r\n(SELECT RealName FROM Users WHERE UserID = Category.U" +
                "serIn) AS RealNameLastEdit,\r\n(SELECT RealName FROM Users WHERE UserID = Category" +
                ".OwnerId) AS RealNameOwner,\r\n\r\n\r\nISNULL((SELECT TOP 1 1 AS CanWrite WHERE \r\n(\r\nE" +
                "XISTS(SELECT CategoryId FROM CategoryRole AS T1 WHERE GrantId = 1 AND CategoryId" +
                " = Category.CategoryId AND CanWrite = 1 AND EXISTS(SELECT RoleId FROM UserRole W" +
                "HERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELEC" +
                "T CategoryId FROM CategoryUser WHERE GrantId = 1 AND CategoryId = Category.Categ" +
                "oryId AND CanWrite = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT Category" +
                "Id FROM CategoryRole AS T1 WHERE GrantId = 2 AND  CategoryId = Category.Category" +
                "Id AND CanWrite = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = T1.Rol" +
                "eId AND UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT CategoryId FR" +
                "OM CategoryUser WHERE GrantId = 2 AND  CategoryId = Category.CategoryId AND CanW" +
                "rite = 1 AND UserId = @UserId)\r\n), 0) AS CanWrite,\r\n\r\nISNULL((SELECT TOP 1 1 AS " +
                "CanInsert WHERE \r\n(\r\nEXISTS(SELECT CategoryId FROM CategoryRole AS T1 WHERE Gran" +
                "tId = 1 AND CategoryId = Category.CategoryId AND CanInsert = 1 AND EXISTS(SELECT" +
                " RoleId FROM UserRole WHERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId " +
                "= 1))\r\nOR\r\nEXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 1 AND Cate" +
                "goryId = Category.CategoryId AND CanInsert = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNO" +
                "T EXISTS(SELECT CategoryId FROM CategoryRole AS T1 WHERE GrantId = 2 AND  Catego" +
                "ryId = Category.CategoryId AND CanInsert = 1 AND EXISTS(SELECT RoleId FROM UserR" +
                "ole WHERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT EX" +
                "ISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId = 2 AND  CategoryId = Cat" +
                "egory.CategoryId AND CanInsert = 1 AND UserId = @UserId)\r\n), 0) AS CanInsert,\r\n\r" +
                "\nISNULL((SELECT TOP 1 1 AS CanDelete WHERE \r\n(\r\nEXISTS(SELECT CategoryId FROM Ca" +
                "tegoryRole AS T1 WHERE GrantId = 1 AND CategoryId = Category.CategoryId AND CanD" +
                "elete = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleId AND Us" +
                "erId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELECT CategoryId FROM CategoryUser" +
                " WHERE GrantId = 1 AND CategoryId = Category.CategoryId AND CanDelete = 1 AND Us" +
                "erId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryRole AS T1 WH" +
                "ERE GrantId = 2 AND  CategoryId = Category.CategoryId AND CanDelete = 1 AND EXIS" +
                "TS(SELECT RoleId FROM UserRole WHERE RoleId = T1.RoleId AND UserId = @UserId AND" +
                " GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantI" +
                "d = 2 AND  CategoryId = Category.CategoryId AND CanDelete = 1 AND UserId = @User" +
                "Id)\r\n), 0) AS CanDelete,\r\n\r\nISNULL((SELECT TOP 1 1 AS UserLevelId WHERE \r\n(\r\nEXI" +
                "STS(SELECT UserLevelId FROM CategoryRole AS T1 WHERE GrantId = 1 AND CategoryId " +
                "= Category.CategoryId AND UserLevelId = 1 AND EXISTS(SELECT RoleId FROM UserRole" +
                " WHERE RoleId = T1.RoleId AND UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SEL" +
                "ECT UserLevelId FROM CategoryUser WHERE GrantId = 1 AND CategoryId = Category.Ca" +
                "tegoryId AND UserLevelId = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT Us" +
                "erLevelId FROM CategoryRole AS T1 WHERE GrantId = 2 AND  CategoryId = Category.C" +
                "ategoryId AND UserLevelId = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE RoleI" +
                "d = T1.RoleId AND UserId = @UserId AND GrantId = 2))\r\nAND\r\nNOT EXISTS(SELECT Use" +
                "rLevelId FROM CategoryUser WHERE GrantId = 2 AND  CategoryId = Category.Category" +
                "Id AND UserLevelId = 1 AND UserId = @UserId)\r\n), 0) AS UserLevelId\r\n\r\nFROM Categ" +
                "ory\r\nWHERE active = 1 AND\r\n(\r\nEXISTS(SELECT CategoryId FROM CategoryRole WHERE G" +
                "rantId = 1 AND CategoryId = Category.CategoryId AND CanRead = 1 AND EXISTS(SELEC" +
                "T RoleId FROM UserRole WHERE UserId = @UserId AND GrantId = 1))\r\nOR\r\nEXISTS(SELE" +
                "CT CategoryId FROM CategoryUser WHERE GrantId = 1 AND CategoryId = Category.Cate" +
                "goryId AND CanRead = 1 AND UserId = @UserId)\r\n)\r\nAND\r\nNOT EXISTS(SELECT Category" +
                "Id FROM CategoryRole WHERE GrantId = 2 AND  CategoryId = Category.CategoryId AND" +
                " CanRead = 1 AND EXISTS(SELECT RoleId FROM UserRole WHERE UserId = @UserId AND G" +
                "rantId = 2))\r\nAND\r\nNOT EXISTS(SELECT CategoryId FROM CategoryUser WHERE GrantId " +
                "= 2 AND  CategoryId = Category.CategoryId AND CanRead = 1 AND UserId = @UserId)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.QryCategoryDataTable dataTable, int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(UserId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.QryCategoryDataTable GetData(int UserId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(UserId));
            dsQueries.QryCategoryDataTable dataTable = new dsQueries.QryCategoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUERIESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QUERIESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUERIES";
            tableMapping.ColumnMappings.Add("SERVERDATETIME", "SERVERDATETIME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        GETDATE() AS SERVERDATETIME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        ISNULL(MAX(CategoryId) + 1, 1) AS NewId\r\nFROM            Category";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        ISNULL(MAX(ItemId) + 1, 1) AS NewId\r\nFROM            Item";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        ISNULL(MAX(RoleID) + 1, 1) AS NewId\r\nFROM            Roles";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        GETDATE() AS SERVERDATETIME";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        ISNULL(MAX(UserID) + 1, 1) AS NewId\r\nFROM            Users";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.QUERIESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.QUERIESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.QUERIESDataTable dataTable = new dsQueries.QUERIESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> ScalarQueryCategoryNewId() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> ScalarQueryItemNewId() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> ScalarQueryRolesNewId() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<global::System.DateTime> ScalarQuerySERVERDATETIME() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<global::System.DateTime>();
            }
            else {
                return new global::System.Nullable<global::System.DateTime>(((global::System.DateTime)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ScalarQueryUsersNewId() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QryLogsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QryLogsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QryLogs";
            tableMapping.ColumnMappings.Add("LogDate", "LogDate");
            tableMapping.ColumnMappings.Add("LogIndex", "LogIndex");
            tableMapping.ColumnMappings.Add("LogIndexExtra", "LogIndexExtra");
            tableMapping.ColumnMappings.Add("LogOpId", "LogOpId");
            tableMapping.ColumnMappings.Add("LogTypeId", "LogTypeId");
            tableMapping.ColumnMappings.Add("UserId", "UserId");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("OperationName", "OperationName");
            tableMapping.ColumnMappings.Add("LogTypeName", "LogTypeName");
            tableMapping.ColumnMappings.Add("RealName", "RealName");
            tableMapping.ColumnMappings.Add("LogNameExtra", "LogNameExtra");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT LogDate, LogIndex, LogIndexExtra, LogOpId, LogTypeId, UserId, id,
(SELECT OperationName FROM LogOpType WHERE LogOpId = Logs.LogOpId) AS OperationName,
(SELECT LogTypeName FROM LogType WHERE LogTypeId = Logs.LogTypeId) AS LogTypeName,
(SELECT RealName FROM Users WHERE UserId = Logs.UserId) AS RealName,
(SELECT RoleName FROM Roles WHERE RoleID = Logs.LogIndexExtra) AS LogNameExtra
FROM Logs 
WHERE LogOpId IN (1, 2, 3, 4, 5, 6, 7, 8, 9)
union
SELECT LogDate, LogIndex, LogIndexExtra, LogOpId, LogTypeId, UserId, id,
(SELECT OperationName FROM LogOpType WHERE LogOpId = Logs.LogOpId) AS OperationName,
(SELECT LogTypeName FROM LogType WHERE LogTypeId = Logs.LogTypeId) AS LogTypeName,
(SELECT RealName FROM Users WHERE UserId = Logs.UserId) AS RealName,
(SELECT RealName FROM Users WHERE UserId = Logs.LogIndexExtra) AS LogNameExtra
FROM Logs 
WHERE LogOpId IN (10, 11, 12, 13, 14, 15)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT LogDate, LogIndex, LogIndexExtra, LogOpId, LogTypeId, UserId, id,
(SELECT OperationName FROM LogOpType WHERE LogOpId = Logs.LogOpId) AS OperationName,
(SELECT LogTypeName FROM LogType WHERE LogTypeId = Logs.LogTypeId) AS LogTypeName,
(SELECT RealName FROM Users WHERE UserId = Logs.UserId) AS RealName,
(SELECT RoleName FROM Roles WHERE RoleID = Logs.LogIndexExtra) AS LogNameExtra
FROM Logs 
WHERE LogTypeId = @LogTypeId AND LogIndex = @LogIndex
AND LogOpId IN (1, 2, 3, 4, 5, 6, 7, 8, 9)
union
SELECT LogDate, LogIndex, LogIndexExtra, LogOpId, LogTypeId, UserId, id,
(SELECT OperationName FROM LogOpType WHERE LogOpId = Logs.LogOpId) AS OperationName,
(SELECT LogTypeName FROM LogType WHERE LogTypeId = Logs.LogTypeId) AS LogTypeName,
(SELECT RealName FROM Users WHERE UserId = Logs.UserId) AS RealName,
(SELECT RealName FROM Users WHERE UserId = Logs.LogIndexExtra) AS LogNameExtra
FROM Logs 
WHERE LogTypeId = @LogTypeId AND LogIndex = @LogIndex
AND LogOpId IN (10, 11, 12, 13, 14, 15)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogTypeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LogTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogIndex", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LogIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.QryLogsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.QryLogsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.QryLogsDataTable dataTable = new dsQueries.QryLogsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLogTypeId_LogIndex(dsQueries.QryLogsDataTable dataTable, global::System.Nullable<int> LogTypeId, global::System.Nullable<int> LogIndex) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((LogTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LogTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LogIndex.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(LogIndex.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsQueries.QryLogsDataTable GetDataByLogTypeId_LogIndex(global::System.Nullable<int> LogTypeId, global::System.Nullable<int> LogIndex) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((LogTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LogTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LogIndex.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(LogIndex.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsQueries.QryLogsDataTable dataTable = new dsQueries.QryLogsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vStudentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vStudentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vStudent";
            tableMapping.ColumnMappings.Add("stu_code", "stu_code");
            tableMapping.ColumnMappings.Add("stu_name", "stu_name");
            tableMapping.ColumnMappings.Add("asase_code", "asase_code");
            tableMapping.ColumnMappings.Add("alsofof_code", "alsofof_code");
            tableMapping.ColumnMappings.Add("fasl_code", "fasl_code");
            tableMapping.ColumnMappings.Add("asase_year", "asase_year");
            tableMapping.ColumnMappings.Add("alsofof_name", "alsofof_name");
            tableMapping.ColumnMappings.Add("fasl_name", "fasl_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        stu_code, stu_name, asase_code, alsofof_code, fasl_code, asase_year" +
                ", alsofof_name, fasl_name\r\nFROM            vStudent";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.vStudentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.vStudentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.vStudentDataTable dataTable = new dsQueries.vStudentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class asaseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public asaseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "asase";
            tableMapping.ColumnMappings.Add("asase_code", "asase_code");
            tableMapping.ColumnMappings.Add("asase_year", "asase_year");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        asase_code, asase_year\r\nFROM            vStudent\r\nGROUP BY asase_co" +
                "de, asase_year";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.asaseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.asaseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.asaseDataTable dataTable = new dsQueries.asaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class alsofofTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public alsofofTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "alsofof";
            tableMapping.ColumnMappings.Add("alsofof_code", "alsofof_code");
            tableMapping.ColumnMappings.Add("alsofof_name", "alsofof_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        alsofof_code, alsofof_name\r\nFROM            vStudent\r\nGROUP BY also" +
                "fof_code, alsofof_name";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.alsofofDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.alsofofDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.alsofofDataTable dataTable = new dsQueries.alsofofDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class faslTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public faslTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fasl";
            tableMapping.ColumnMappings.Add("fasl_code", "fasl_code");
            tableMapping.ColumnMappings.Add("fasl_name", "fasl_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        fasl_code, fasl_name\r\nFROM            vStudent\r\nGROUP BY fasl_code," +
                " fasl_name";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.faslDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.faslDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.faslDataTable dataTable = new dsQueries.faslDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmpTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EmpTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Emp";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("TAT", "TAT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Code, Name, TAT\r\nFROM            Emp";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.EmpDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.EmpDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.EmpDataTable dataTable = new dsQueries.EmpDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StudentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Student";
            tableMapping.ColumnMappings.Add("stu_code", "stu_code");
            tableMapping.ColumnMappings.Add("stu_name", "stu_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Student] WHERE (([stu_code] = @Original_stu_code) AND ((@IsNull_stu_" +
                "name = 1 AND [stu_name] IS NULL) OR ([stu_name] = @Original_stu_name)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stu_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_stu_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stu_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Student] ([stu_code], [stu_name]) VALUES (@stu_code, @stu_name);\r\nSE" +
                "LECT stu_code, stu_name FROM Student WHERE (stu_code = @stu_code) ORDER BY stu_n" +
                "ame";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stu_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stu_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Student] SET [stu_code] = @stu_code, [stu_name] = @stu_name WHERE (([stu_code] = @Original_stu_code) AND ((@IsNull_stu_name = 1 AND [stu_name] IS NULL) OR ([stu_name] = @Original_stu_name)));
SELECT stu_code, stu_name FROM Student WHERE (stu_code = @stu_code) ORDER BY stu_name";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stu_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stu_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stu_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_stu_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stu_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stu_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataCenter.Properties.Settings.Default.DataCenterConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        stu_code, stu_name\r\nFROM            Student\r\nORDER BY stu_name";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Student.stu_code, Student.stu_name
FROM            Student INNER JOIN
                         student_t ON Student.stu_code = student_t.stu_code
WHERE        (student_t.asase_code = @asase_code) AND (student_t.alsofof_code = @alsofof_code) AND (student_t.fasl_code = @fasl_code)
GROUP BY Student.stu_code, Student.stu_name
ORDER BY Student.stu_name";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@asase_code", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "asase_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alsofof_code", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "alsofof_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fasl_code", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "fasl_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsQueries.StudentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsQueries.StudentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsQueries.StudentDataTable dataTable = new dsQueries.StudentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPram(dsQueries.StudentDataTable dataTable, int asase_code, int alsofof_code, int fasl_code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(asase_code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(alsofof_code));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(fasl_code));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsQueries.StudentDataTable GetDataByPram(int asase_code, int alsofof_code, int fasl_code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(asase_code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(alsofof_code));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(fasl_code));
            dsQueries.StudentDataTable dataTable = new dsQueries.StudentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsQueries.StudentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsQueries dataSet) {
            return this.Adapter.Update(dataSet, "Student");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_stu_code, string Original_stu_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_stu_code));
            if ((Original_stu_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_stu_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int stu_code, string stu_name) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(stu_code));
            if ((stu_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(stu_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int stu_code, string stu_name, int Original_stu_code, string Original_stu_name) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(stu_code));
            if ((stu_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(stu_name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_stu_code));
            if ((Original_stu_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_stu_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string stu_name, int Original_stu_code, string Original_stu_name) {
            return this.Update(Original_stu_code, stu_name, Original_stu_code, Original_stu_name);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private StudentTableAdapter _studentTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentTableAdapter StudentTableAdapter {
            get {
                return this._studentTableAdapter;
            }
            set {
                this._studentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._studentTableAdapter != null) 
                            && (this._studentTableAdapter.Connection != null))) {
                    return this._studentTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._studentTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsQueries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsQueries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsQueries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsQueries dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._studentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._studentTableAdapter != null)) {
                    revertConnections.Add(this._studentTableAdapter, this._studentTableAdapter.Connection);
                    this._studentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._studentTableAdapter != null)) {
                    this._studentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentTableAdapter]));
                    this._studentTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591